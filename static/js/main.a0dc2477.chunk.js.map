{"version":3,"sources":["views/pathFinding/node.js","views/buttonGroup.js","views/pathFinding/initialNodes.js","algorithms/queue.js","algorithms/utils.js","algorithms/dijkstra.js","views/pathFinding/nodeArray.js","views/pathFinding/pathFinding.js","views/header.js","App.js","index.js"],"names":["typeToColorMap","source","goal","wall","visited","shortestPath","unvisited","Node","props","useState","type","setType","internalMouseDown","setInternalMouseDown","runState","hooks","updateType","newType","setTypeInNode","coordinates","handleMakeWall","style","height","width","border","background","transform","key","onMouseDown","setRunState","setIsMouseDownInArray","onMouseUp","onMouseEnter","isMouseDownInArray","onMouseLeave","ButtonGroup","selectStyle","backgroundColor","minWidth","textAlign","isEmpty","isCustomized","isRunning","isFinished","algorithm","setAlgorithm","speed","setSpeed","anchorEl","setAnchorEl","handleMoreClose","marginBottom","display","flexDirection","justifyContent","FormControl","variant","InputLabel","color","fontStyle","Select","value","onChange","event","target","console","log","label","autoWidth","MenuItem","marginLeft","Button","ariant","disabled","onClick","runAlgorithm","resetNodes","clearPath","fontSize","margin","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","Link","href","getInitialNodes","nodes","row","currentRow","col","rowIndex","colIndex","push","Queue","getFirstElem","array","shift","add","elem","added","i","length","dist","splice","clear","this","getNeighboors","node","neighboors","upNode","rightNode","downNode","leftNode","Dijkstra","setUpdateHook","changedNodesInOrder","helperNodes","map","helperRow","getHelperNodes","Q","prev","undefined","helperSource","u","v","goalNode","U","V","alt","Math","sqrt","shortestPathNode","update","helperNode","setTimeout","foundString","speedLabelToSpeedMap","slow","medium","fast","testKey","NodeArray","setNodes","useEffect","initialNodes","currentSpeed","PathFinding","Header","App","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0dc2477.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { render } from '@testing-library/react'\n\nconst typeToColorMap = {\n  source: '#63C132',\n  goal: '#cf2e2e',\n  wall: `rgb(${[220,220,220]})`,\n  visited: '#2d749a',\n  shortestPath: '#ffff60',\n  unvisited: ''\n}\n\nconst Node = (props) => {\n  var [type, setType] = useState(props.type)\n  const [internalMouseDown, setInternalMouseDown] = useState(false)\n  const runState = props.hooks.runState\n\n  const updateType = (newType) => {\n    setType(newType)\n    props.setTypeInNode(newType, props.coordinates)\n  }\n  \n  const handleMakeWall = () => {\n    if (props.type === 'unvisited') updateType('wall')\n    else if (props.type === 'wall') updateType('unvisited')\n    setInternalMouseDown(true)\n  }\n\n  const style = {\n    height: '2.5em',\n    width: '2.5em',\n    border: `1px solid rgb(${[220,220,220]})`,\n    background: typeToColorMap[type],\n    ...(internalMouseDown && type === 'wall' && {transform: `scale(${1.3})`})\n  }\n\n  const onMouseDown = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    props.hooks.setRunState('customized')\n\n    props.hooks.setIsMouseDownInArray(true)\n    handleMakeWall()\n  }\n  const onMouseEnter = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    if (props.hooks.isMouseDownInArray) {\n      props.hooks.setIsMouseDownInArray(true) // To prevent mouseUp outside of grid bug\n      handleMakeWall()\n    }\n  }\n  const onMouseUp = () => {\n    props.hooks.setIsMouseDownInArray(false)\n    setInternalMouseDown(false)\n  }\n  const onMouseLeave = () => {\n    setInternalMouseDown(false) // to stop scale(1.3)\n    props.hooks.setIsMouseDownInArray(false) // To prevent mouseUp outside of grid bug\n  }\n  return (\n    <div key={props.key} style={style} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}/>\n  )\n}\n\nexport default Node","import React, { useState } from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem, Menu, Link } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C', //'#A0D2DB', //`rgb(${[220,220,220]})`\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  const isEmpty = props.runState === 'empty'\n  const isCustomized = props.runState === 'customized'\n  const isRunning = props.runState === 'running'\n  const isFinished = props.runState === 'finished'\n\n  // ALGORITHM SELECT\n  const [algorithm, setAlgorithm] = useState('')\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value)\n    //props.setAlgorithmInParent(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // SPEED SELECT\n  const [speed, setSpeed] = useState('medium')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value)\n    props.setSpeed(event.target.value)\n  }\n\n  // PLAY BUTTON\n  const handlePlayClick = () => {\n    props.runAlgorithm(algorithm)\n  }\n\n  // material UI:\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'dijkstra'}>Dijkstra</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm === '' || isRunning || isFinished ? 'gray' : '#63C132'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isRunning}\n        onClick={handlePlayClick}\n      >\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isEmpty || isRunning ? 'gray' : '#cf2e2e'}}\n        variant=\"contained\"\n        disabled={isEmpty || isRunning}\n        onClick={isCustomized ? props.resetNodes : props.clearPath}\n      >\n        { isEmpty || isCustomized ? <HighlightOffIcon /> : <ReplayIcon /> }\n      </Button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '3em'}}>\n        <Button style={{fontSize: '1em', color: 'white', margin: 0}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://www.youtube.com/watch?v=dQw4w9WgXcQ' style={{color: 'black'}}>\n            Sorting Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/algorithm-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n        </Menu>\n      </div>\n    </div>\n  )\n}\n\n\n//<MenuItem value={'aStar'}>A*</MenuItem>\n//<MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n//<MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n\nexport default ButtonGroup","// UNIQUE keys for every render, otherwise resetting wont work because the hook in each node\n\nconst getInitialNodes = () => {\n  const numRows = 11 // 21\n  const numCols = 21 // 50\n  const nodes = []\n  // Initialize the nodes\n  for (let row = 0; row < numRows; row++) {\n    const currentRow = []\n    for (let col = 0; col < numCols; col++) {\n      const rowIndex = row\n      const colIndex = col\n      var type = 'unvisited'\n      // 10 og 4\n      // 10 og 44\n      if (row === 5 && col === 4) {type = 'source'}\n      if (row === 5 && col === 16) {type = 'goal'}\n      currentRow.push(\n        { type, rowIndex, colIndex }\n      )\n    }\n    nodes.push(currentRow)\n  }\n  return nodes\n}\n\nexport default getInitialNodes","// sorted queue with shortest distance and earliest push first\nexport class Queue {\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n\nexport class aStarQueue {\n  // sorted queue with shortest distance and earliest push first\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n","  export const getNeighboors = (nodes, node) => {\n  const neighboors = []\n  const row = node.rowIndex\n  const col = node.colIndex\n\n  // UP\n  if (row > 0) {\n    const upNode = nodes[row - 1][col]\n    if (upNode.type === 'unvisited' || upNode.type === 'goal') {\n      neighboors.push(upNode) \n    }\n  }\n  // RIGHT 49\n  if (col < 20) {\n    const rightNode = nodes[row][col + 1]\n    if (rightNode.type === 'unvisited' || rightNode.type === 'goal') {\n      neighboors.push(rightNode) \n    }\n  }\n  // DOWN\n  if (row < 10) {\n    const downNode = nodes[row + 1][col]\n    if (downNode.type === 'unvisited' || downNode.type === 'goal') {\n      neighboors.push(downNode) \n    }\n  }\n  // LEFT\n  if (col > 0) {\n    const leftNode = nodes[row][col - 1]\n    if (leftNode.type === 'unvisited' || leftNode.type === 'goal') {\n      neighboors.push(leftNode) \n    }\n  }\n\n  return neighboors\n}\n\nexport const getManDistance = (u, v) => {\n  return Math.sqrt( (u.rowIndex - v.rowIndex)**2 + (u.colIndex - v.colIndex)**2)\n}\n\n/*\nconst test = [{x: 1}, {x: 2}]\nconst a = test[0]\na.x = 3\nconsole.log(test)\n\n\nconst test = () => {\n  var t = 'hei'\n  var i = 1\n  for(var x = 0; x < 5; x++) {\n    (function() {\n      setTimeout(function() {\n        console.log(t)\n        t = 'hade'\n      }, 1000*i)\n    }(i))\n    i++\n  }\n  for(var x = 0; x < 5; x++) {\n    (function() {\n      setTimeout(function() {\n        console.log(t)\n      }, 1000*i)\n    }(i))\n    i++\n  }\n}\ntest() */","import { Queue } from './queue.js'\nimport { getNeighboors, getManDistance } from './utils.js'\n\nconst getHelperNodes = (nodes) => {\n  const helperNodes = []\n  nodes.map((row) => {\n    const helperRow = []\n    row.map((node) => {\n        helperRow.push(\n          {\n            type: node.type,\n            rowIndex: node.rowIndex,\n            colIndex: node.colIndex\n          }\n        )\n    })\n    helperNodes.push(helperRow)\n  })\n  return helperNodes\n}\n\nexport const Dijkstra = (nodes, source, speed, setUpdateHook, setRunState) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    //console.log(U)\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      Q.add(V)\n      const alt = U.dist + getManDistance(U, V)\n      if (alt < V.dist) {\n        V.dist = alt\n        V.prev = [U.rowIndex, U.colIndex] // We keep track of index instead of node for memory purposes -> Becomes a long chain\n      }\n      changedNodesInOrder.push(\n        {\n          rowIndex: V.rowIndex,\n          colIndex: V.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  // VISUALIZE:\n  var i = 1\n  var update = true\n  changedNodesInOrder.map((helperNode) => {\n    setTimeout(() => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      setUpdateHook(update) // this has to be done to make the parent component rerender, thus displaying the updates\n      update = !update\n    }, speed*i)\n    i++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n  }, speed*i)\n\n  const foundString = goalNode ? 'found' : 'not found'\n  console.log('Dijkstra finished: Goal ' + foundString)\n}\n","import React, { useState, useEffect } from 'react'\nimport Node from './node.js'\nimport ButtonGroup from '../buttonGroup.js'\nimport getInitialNodes from './initialNodes.js'\nimport { Dijkstra } from '../../algorithms/dijkstra.js'\n//import { AStar } from '../../algorithms/aStar.js'\n\nconst algorithmMap = {\n  dijkstra: Dijkstra\n}\nconst speedLabelToSpeedMap = {\n  slow: 200,\n  medium: 100,\n  fast: 60\n}\n\nvar testKey = 0\nconst NodeArray = () => {\n  const [nodes, setNodes] = useState([])\n  const [isMouseDownInArray, setIsMouseDownInArray] = useState(false)\n  const [runState, setRunState] = useState('empty') // empty, cusomized, running, finished\n  //const [algorithm, setAlgorithm] = useState('') // IKKE NØDVENDIG? -> Kan holdes i ButtonGroup -> Samme med speed -> Nei\n  const [speed, setSpeed] = useState('medium')\n  const [updateHook, setUpdateHook] = useState(false)\n\n  const hooks = {\n    isMouseDownInArray,\n    setIsMouseDownInArray,\n    runState,\n    setRunState\n  }\n\n  // basicly componentDidMount()\n  useEffect(() => {\n    const initialNodes = getInitialNodes()\n    setNodes(initialNodes)\n  }, [])\n\n  const setTypeInNode = (type, coordinates) => {\n    const row = coordinates[0]\n    const col = coordinates[1]\n    nodes[row][col].type = type\n  }\n\n  const resetNodes = () => {\n    const initialNodes = getInitialNodes() // clears the grid\n    setNodes(initialNodes)\n    setRunState('empty')\n  }\n\n  const runAlgorithm = (algorithm) => {\n    // const algorithmToRun = algorithmMap[algorithm]\n    setRunState('running')\n    const currentSpeed = speedLabelToSpeedMap[speed]\n    if (algorithm === 'dijkstra') {\n      Dijkstra(nodes, nodes[5][4], currentSpeed, setUpdateHook, setRunState)\n    } else if (algorithm) {\n      //AStar(nodes, nodes[5][4], nodes[5][16], currentSpeed, setUpdateHook, setRunState)\n    }\n  }\n\n  const clearPath = () => {\n    var isCustomized = false\n    nodes.map((row) => {\n      row.map((node) => {\n        if (node.type === 'shortestPath' || node.type === 'visited') {\n          node.type = 'unvisited'\n        } else if (node.type === 'wall') {\n          isCustomized = true\n        }\n      })\n    })\n    setRunState(isCustomized ? 'customized' : 'empty')\n    console.log('path cleared')\n  }\n  // setAlgorithmInParent={setAlgorithm}\n  //console.log('rendered')\n  return (\n    <div>\n      <ButtonGroup runState={runState} runAlgorithm={runAlgorithm} setSpeed={setSpeed} resetNodes={resetNodes} clearPath={clearPath} />\n      {nodes.map((row, rowIndex) => {\n        return <div key={rowIndex} style={{display: 'flex', flexDirection: 'row'}}>\n          {row.map((node, colIndex) =>\n            <Node\n              key={testKey++}\n              type={node.type}\n              hooks={hooks}\n              setTypeInNode={setTypeInNode}\n              coordinates={[rowIndex, colIndex]}\n            />\n          )}\n        </div>\n      })}\n    </div>\n  )\n}\n\nexport default NodeArray","import React from 'react'\n// import ButtonGroup from '../buttonGroup.js'\nimport NodeArray from './nodeArray.js'\n\nexport const PathFinding = () => {\n  return (\n    <NodeArray />\n  )\n}\n\nexport default PathFinding","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div style={{marginBottom: '2em'}}>\n      <h1 style={{fontSize: '3.5em', color: `rgb(${[250,250,250]})`}}> Algorithm Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport PathFinding from './views/pathFinding/pathFinding.js'\nimport Header from './views/header.js'\n\nfunction App() {\n\n  const algorithmStyle = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <>\n\n      <div style={algorithmStyle}>\n        <Header />\n        <PathFinding />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}