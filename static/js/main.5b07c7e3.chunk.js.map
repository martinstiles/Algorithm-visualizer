{"version":3,"sources":["views/pathFinding/node.js","views/buttonGroup/modal.js","views/buttonGroup/moreMenu.js","views/buttonGroup/buttonGroup.js","views/pathFinding/initialNodes.js","algorithms/queue.js","algorithms/utils.js","algorithms/dijkstra.js","views/pathFinding/nodeArray.js","algorithms/aStar.js","views/pathFinding/pathFinding.js","views/header.js","App.js","index.js"],"names":["typeToColorMap","source","goal","wall","visited","shortestPath","unvisited","Node","props","useState","type","setType","internalMouseDown","setInternalMouseDown","runState","hooks","updateType","newType","setTypeInNode","coordinates","handleMakeWall","style","height","width","border","background","transform","key","onMouseDown","setRunState","setIsMouseDownInArray","onMouseUp","onMouseEnter","isMouseDownInArray","onMouseLeave","modal","display","alignItems","justifyContent","paper","backgroundColor","textAlign","padding","TransitionsModal","open","setOpen","Button","fontSize","color","margin","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","flexDirection","MoreMenu","anchorEl","setAnchorEl","handleMoreClose","marginTop","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","Link","target","href","ButtonGroup","selectStyle","minWidth","isEmpty","isCustomized","isRunning","isFinished","algorithm","setAlgorithm","speed","setSpeed","marginBottom","FormControl","variant","InputLabel","fontStyle","Select","value","onChange","console","log","label","autoWidth","marginLeft","ariant","disabled","runAlgorithm","resetNodes","clearPath","getInitialNodes","nodes","row","currentRow","col","rowIndex","colIndex","push","Queue","getFirstElem","array","shift","add","elem","added","i","length","dist","splice","clear","this","getNeighboors","node","neighboors","upNode","rightNode","downNode","leftNode","getManDistance","u","v","Math","sqrt","Dijkstra","setUpdateHook","changedNodesInOrder","helperNodes","map","helperRow","getHelperNodes","Q","prev","undefined","helperSource","goalNode","U","V","alt","shortestPathNode","update","helperNode","setTimeout","foundString","speedLabelToSpeedMap","slow","medium","fast","NodeArray","setNodes","useEffect","initialNodes","currentSpeed","helperGoal","goalFound","AStar","PathFinding","Header","App","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGMA,G,OAAiB,CACrBC,OAAQ,UACRC,KAAM,UACNC,KAAK,OAAD,OAAS,CAAC,IAAI,IAAI,KAAlB,KACJC,QAAS,UACTC,aAAc,UACdC,UAAW,KAsDEC,EAnDF,SAACC,GAAW,IAAD,EACAC,mBAASD,EAAME,MADf,mBACjBA,EADiB,KACXC,EADW,OAE4BF,oBAAS,GAFrC,mBAEfG,EAFe,KAEIC,EAFJ,KAGhBC,EAAWN,EAAMO,MAAMD,SAEvBE,EAAa,SAACC,GAClBN,EAAQM,GACRT,EAAMU,cAAcD,EAAST,EAAMW,cAG/BC,EAAiB,WACF,cAAfZ,EAAME,KAAsBM,EAAW,QACnB,SAAfR,EAAME,MAAiBM,EAAW,aAC3CH,GAAqB,IAGjBQ,EAAK,aACTC,OAAQ,QACRC,MAAO,QACPC,OAAO,iBAAD,OAAmB,CAAC,IAAI,IAAI,KAA5B,KACNC,WAAYzB,EAAeU,IACvBE,GAA8B,SAATF,GAAmB,CAACgB,UAAU,SAAD,OAAW,IAAX,OAyBxD,OACE,yBAAKC,IAAKnB,EAAMmB,IAAKN,MAAOA,EAAOO,YAvBjB,WACA,UAAbd,GAAqC,eAAbA,IAC7BN,EAAMO,MAAMc,YAAY,cAExBrB,EAAMO,MAAMe,uBAAsB,GAClCV,MAkB6DW,UAT7C,WAChBvB,EAAMO,MAAMe,uBAAsB,GAClCjB,GAAqB,IAO8DmB,aAhBhE,WACD,UAAblB,GAAqC,eAAbA,GACzBN,EAAMO,MAAMkB,qBACdzB,EAAMO,MAAMe,uBAAsB,GAClCV,MAY6Gc,aAL5F,WACnBrB,GAAqB,GACrBL,EAAMO,MAAMe,uBAAsB,O,gJCjDhCK,EAAQ,CACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEZC,EAAQ,CACZC,gBAAgB,OAAD,OAAS,CAAC,GAAG,GAAG,IAAhB,KACfhB,OAAO,iBAAD,OAAmB,CAAC,IAAI,IAAI,KAA5B,KACNiB,UAAW,OACXC,QAAS,OAqDIC,EAlDU,WAAO,IAAD,EAELlC,oBAAS,GAFJ,mBAEtBmC,EAFsB,KAEhBC,EAFgB,KAY7B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQzB,MAAO,CAAC0B,SAAU,QAASC,MAAO,QAASC,OAAQ,GAAKC,QAVjD,WACjBL,GAAQ,KAUJ,kBAAC,IAAD,CAAUxB,MAAO,CAAC0B,SAAU,YAE9B,kBAACI,EAAA,EAAD,CACE9B,MAAOc,EACPS,KAAMA,EACNQ,QAZc,WAClBP,GAAQ,IAYJQ,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMC,GAAIf,GACR,yBAAKvB,MAAOkB,GACV,qEACA,yBAAKlB,MAAO,CAACe,QAAS,OAAQwB,cAAe,QAC3C,uBAAGvC,MAAO,CAAC2B,MAAO,YAAlB,kBACA,8CAEF,yBAAK3B,MAAO,CAACe,QAAS,OAAQwB,cAAe,QAC3C,uBAAGvC,MAAO,CAAC2B,MAAO,YAAlB,gBACA,6CAEF,uGACA,iFACA,2FACA,gFACA,qD,oCChCGa,EAzBE,WAAO,IAAD,EACWpD,mBAAS,MADpB,mBACdqD,EADc,KACJC,EADI,KAEfC,EAAkB,WAAQD,EAAY,OAG5C,OACE,oCACE,kBAACjB,EAAA,EAAD,CAAQzB,MAAO,CAAC0B,SAAU,MAAOC,MAAO,QAASC,OAAQ,EAAGgB,UAAW,OAAQC,gBAAc,OAAOhB,QAJhF,SAACiB,GAAYJ,EAAYI,EAAMC,iBAK/C,kBAAC,IAAD,CAAkB/C,MAAO,CAAC0B,SAAU,YAEtC,kBAACsB,EAAA,EAAD,CAAMP,SAAUA,EAAUQ,aAAW,EAAC1B,KAAM2B,QAAQT,GAAWV,QAASY,GACtE,kBAACQ,EAAA,EAAD,CAAUtB,QAASc,GAAnB,IAAqC,kBAACS,EAAA,EAAD,CAAMC,OAAO,SAASC,KAAK,8CAA8CtD,MAAO,CAAC2B,MAAO,UAAxF,uBAGrC,kBAACwB,EAAA,EAAD,CAAUtB,QAASc,GAAnB,IAAqC,kBAACS,EAAA,EAAD,CAAMC,OAAO,SAASC,KAAK,uDAAuDtD,MAAO,CAAC2B,MAAO,UAAjG,qBAGrC,kBAACwB,EAAA,EAAD,CAAUtB,QAASc,GAAnB,IAAqC,kBAACS,EAAA,EAAD,CAAMC,OAAO,SAASC,KAAK,0CAA0CtD,MAAO,CAAC2B,MAAO,UAApF,wBCgFhC4B,EA7FK,SAACpE,GACnB,IAOMqE,EAAc,CAClBrC,gBAAiB,UACjBsC,SAAU,OACVrC,UAAW,QAIPsC,EAA6B,UAAnBvE,EAAMM,SAChBkE,EAAkC,eAAnBxE,EAAMM,SACrBmE,EAA+B,YAAnBzE,EAAMM,SAClBoE,EAAgC,aAAnB1E,EAAMM,SAlBI,EAqBKL,mBAAS,IArBd,mBAqBtB0E,EArBsB,KAqBXC,EArBW,OA4BH3E,mBAAS,UA5BN,mBA4BtB4E,EA5BsB,KA4BfC,EA5Be,KAuC7B,OACE,yBAAKjE,MAvCO,CACZkE,aAAc,MACdnD,QAAS,OACTwB,cAAe,MACftB,eAAgB,kBAoCd,yBAAKjB,MAAO,CAACe,QAAS,OAAQwB,cAAe,QAC7C,kBAAC4B,EAAA,EAAD,CAAaC,QAAQ,UACnB,kBAACC,EAAA,EAAD,KACE,yBAAKrE,MAAO,CAAC2B,MAAO,QAAS2C,UAAW,WAAxC,qBAEF,kBAACC,EAAA,EAAD,CAAQvE,MAAOwD,EAAagB,MAAOV,EAAWW,SAxBtB,SAAC3B,GAC7BiB,EAAajB,EAAMO,OAAOmB,OAC1BE,QAAQC,IAAI7B,EAAMO,OAAOmB,QAsB0DI,MAAM,YAAYC,WAAW,GAC1G,kBAAC1B,EAAA,EAAD,CAAUqB,MAAO,YAAjB,cAIJ,kBAACL,EAAA,EAAD,CAAaC,QAAQ,SAASpE,MAAO,CAAC8E,WAAY,QAChD,kBAACT,EAAA,EAAD,KACE,yBAAKrE,MAAO,CAAC2B,MAAO,QAAS2C,UAAW,WAAxC,UAEF,kBAACC,EAAA,EAAD,CAAQvE,MAAOwD,EAAagB,MAAOR,EAAOS,SA1BtB,SAAC3B,GACzBmB,EAASnB,EAAMO,OAAOmB,OACtBrF,EAAM8E,SAASnB,EAAMO,OAAOmB,QAwB+CI,MAAM,QAAQC,WAAW,GAC9F,kBAAC1B,EAAA,EAAD,CAAUqB,MAAO,QAAjB,QACA,kBAACrB,EAAA,EAAD,CAAUqB,MAAO,UAAjB,UACA,kBAACrB,EAAA,EAAD,CAAUqB,MAAO,QAAjB,UAIJ,kBAAC/C,EAAA,EAAD,CACEzB,MAAO,CAAC8E,WAAY,MAAOnD,MAAO,QAASR,gBAA+B,KAAd2C,GAAoBF,GAAaC,EAAa,OAAS,WACnHkB,OAAO,YACPC,SAAwB,KAAdlB,GAAoBF,EAC9B/B,QA/BkB,WACtB1C,EAAM8F,aAAanB,KAgCf,kBAAC,IAAD,OAEF,kBAACrC,EAAA,EAAD,CACEzB,MAAO,CAAC8E,WAAY,MAAOnD,MAAO,QAASR,gBAAiBuC,GAAWE,EAAY,OAAS,WAC5FQ,QAAQ,YACRY,SAAUtB,GAAWE,EACrB/B,QAAS8B,EAAexE,EAAM+F,WAAa/F,EAAMgG,WAE/CzB,GAAWC,EAAe,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAIrD,yBAAK3D,MAAO,CAACe,QAAS,OAAQwB,cAAe,MAAOb,SAAU,QAC5D,kBAAC,EAAD,MACA,kBAAC,EAAD,SChEO0D,EAxBS,WAKtB,IAJA,IAEMC,EAAQ,GAELC,EAAM,EAAGA,EAJF,GAIiBA,IAAO,CAEtC,IADA,IAAMC,EAAa,GACVC,EAAM,EAAGA,EALJ,GAKmBA,IAAO,CACtC,IAAMC,EAAWH,EACXI,EAAWF,EACbnG,EAAO,YAGC,IAARiG,GAAqB,IAARE,IAAYnG,EAAO,UACxB,IAARiG,GAAqB,KAARE,IAAanG,EAAO,QACrCkG,EAAWI,KACT,CAAEtG,OAAMoG,WAAUC,aAGtBL,EAAMM,KAAKJ,GAEb,OAAOF,G,SCtBIO,EACX,aAAe,IAAD,gCAIdC,aAAe,WACb,OAAO,EAAKC,MAAMC,SALN,KAOdC,IAAM,SAACC,GAEL,IADA,IAAIC,GAAQ,EACHC,EAAI,EAAGA,EAAI,EAAKL,MAAMM,OAAQD,IACrC,GAAIF,EAAKI,KAAO,EAAKP,MAAMK,GAAGE,KAAM,CACjC,EAAKP,MAAMQ,OAAOH,EAAG,EAAGF,GACzBC,GAAQ,EACR,MAGCA,GAAO,EAAKJ,MAAMH,KAAKM,IAhBhB,KAkBdM,MAAQ,WACN,EAAKT,MAAQ,IAlBbU,KAAKV,MAAQ,ICHFW,EAAgB,SAACpB,EAAOqB,GACrC,IAAMC,EAAa,GACbrB,EAAMoB,EAAKjB,SACXD,EAAMkB,EAAKhB,SAGjB,GAAIJ,EAAM,EAAG,CACX,IAAMsB,EAASvB,EAAMC,EAAM,GAAGE,GACV,cAAhBoB,EAAOvH,MAAwC,SAAhBuH,EAAOvH,MACxCsH,EAAWhB,KAAKiB,GAIpB,GAAIpB,EAAM,GAAI,CACZ,IAAMqB,EAAYxB,EAAMC,GAAKE,EAAM,GACZ,cAAnBqB,EAAUxH,MAA2C,SAAnBwH,EAAUxH,MAC9CsH,EAAWhB,KAAKkB,GAIpB,GAAIvB,EAAM,GAAI,CACZ,IAAMwB,EAAWzB,EAAMC,EAAM,GAAGE,GACV,cAAlBsB,EAASzH,MAA0C,SAAlByH,EAASzH,MAC5CsH,EAAWhB,KAAKmB,GAIpB,GAAItB,EAAM,EAAG,CACX,IAAMuB,EAAW1B,EAAMC,GAAKE,EAAM,GACZ,cAAlBuB,EAAS1H,MAA0C,SAAlB0H,EAAS1H,MAC5CsH,EAAWhB,KAAKoB,GAIpB,OAAOJ,GAGIK,EAAiB,SAACC,EAAGC,GAChC,OAAOC,KAAKC,KAAM,SAACH,EAAExB,SAAWyB,EAAEzB,SAAW,GAA3B,SAAgCwB,EAAEvB,SAAWwB,EAAExB,SAAW,KCjBjE2B,EAAW,SAAChC,EAAOzG,EAAQoF,EAAOsD,EAAe9G,GAC5D,IAAM+G,EAAsB,GACtBC,EApBe,SAACnC,GACtB,IAAMmC,EAAc,GAcpB,OAbAnC,EAAMoC,KAAI,SAACnC,GACT,IAAMoC,EAAY,GAClBpC,EAAImC,KAAI,SAACf,GACLgB,EAAU/B,KACR,CACEtG,KAAMqH,EAAKrH,KACXoG,SAAUiB,EAAKjB,SACfC,SAAUgB,EAAKhB,cAIvB8B,EAAY7B,KAAK+B,MAEZF,EAKaG,CAAetC,GAG7BuC,EAAI,IAAIhC,EAEd4B,EAAYC,KAAI,SAACnC,GAAD,OACdA,EAAImC,KAAI,SAACf,GACPA,EAAKL,KAAO,IACZK,EAAKmB,UAAOC,QAIhB,IAAMC,EAAeP,EAAY5I,EAAO6G,UAAU7G,EAAO8G,UACzDqC,EAAa1B,KAAO,EACpBuB,EAAE5B,IAAI+B,GAIN,IAFA,IAAIC,OAAWF,EAEW,IAAnBF,EAAE9B,MAAMM,QAKb,IAJA,IAAM6B,EAAIL,EAAE/B,eAENc,EAAaF,EAAce,EAAaS,GAErC9B,EAAI,EAAGA,EAAIQ,EAAWP,OAAQD,IAAK,CAC1C,IAAM+B,EAAIvB,EAAWR,GACrB,GAAe,SAAX+B,EAAE7I,KAAiB,EACrB2I,EAAWE,GACFL,KAAO,CAACI,EAAExC,SAAUwC,EAAEvC,UAC/BkC,EAAErB,QACF,MAEF2B,EAAE7I,KAAO,UACTuI,EAAE5B,IAAIkC,GACN,IAAMC,EAAMF,EAAE5B,KAAOW,EAAeiB,EAAGC,GACnCC,EAAMD,EAAE7B,OACV6B,EAAE7B,KAAO8B,EACTD,EAAEL,KAAO,CAACI,EAAExC,SAAUwC,EAAEvC,WAE1B6B,EAAoB5B,KAClB,CACEF,SAAUyC,EAAEzC,SACZC,SAAUwC,EAAExC,SACZrG,KAAM,YAMd,GAAI2I,EAEF,IADA,IAAII,EAAmBZ,EAAYQ,EAASH,KAAK,IAAIG,EAASH,KAAK,IAC5DO,EAAiBP,MACtBO,EAAiB/I,KAAO,eACxBkI,EAAoB5B,KAClB,CACEF,SAAU2C,EAAiB3C,SAC3BC,SAAU0C,EAAiB1C,SAC3BrG,KAAM,iBAGV+I,EAAmBZ,EAAYY,EAAiBP,KAAK,IAAIO,EAAiBP,KAAK,IAKnF,IAAI1B,EAAI,EACJkC,GAAS,EACbd,EAAoBE,KAAI,SAACa,GACvBC,YAAW,WACIlD,EAAMiD,EAAW7C,UAAU6C,EAAW5C,UAC9CrG,KAAOiJ,EAAWjJ,KACvBiI,EAAce,GACdA,GAAUA,IACTrE,EAAMmC,GACTA,OAEFoC,YAAW,WACT/H,EAAY,cACXwD,EAAMmC,GAET,IAAMqC,EAAcR,EAAW,QAAU,YACzCtD,QAAQC,IAAI,2BAA6B6D,IC7FrCC,EAAuB,CAC3BC,KAAM,IACNC,OAAQ,IACRC,KAAM,IAGJtI,EAAM,EAiFKuI,EAhFG,WAAO,IAAD,EACIzJ,mBAAS,IADb,mBACfiG,EADe,KACRyD,EADQ,OAE8B1J,oBAAS,GAFvC,mBAEfwB,EAFe,KAEKH,EAFL,OAGUrB,mBAAS,SAHnB,mBAGfK,EAHe,KAGLe,EAHK,OAKIpB,mBAAS,UALb,mBAKf4E,EALe,KAKRC,EALQ,OAMc7E,oBAAS,GANvB,mBAMHkI,GANG,WAQhB5H,EAAQ,CACZkB,qBACAH,wBACAhB,WACAe,eAIFuI,qBAAU,WACR,IAAMC,EAAe5D,IACrB0D,EAASE,KACR,IAEH,IAAMnJ,EAAgB,SAACR,EAAMS,GAC3B,IAAMwF,EAAMxF,EAAY,GAClB0F,EAAM1F,EAAY,GACxBuF,EAAMC,GAAKE,GAAKnG,KAAOA,GAoCzB,OACE,6BACE,kBAAC,EAAD,CAAaI,SAAUA,EAAUwF,aA7BhB,SAACnB,GAEpBtD,EAAY,WACZ,IAAMyI,EAAeR,EAAqBzE,GACxB,aAAdF,EACFuD,EAAShC,EAAOA,EAAM,GAAG,GAAI4D,EAAc3B,EAAe9G,GACjDsD,GCnCM,SAACuB,EAAOzG,EAAQC,EAAMmF,EAAOsD,EAAe9G,GAC/D,IAAM+G,EAAsB,GACtBC,EApBe,SAACnC,GACtB,IAAMmC,EAAc,GAcpB,OAbAnC,EAAMoC,KAAI,SAACnC,GACT,IAAMoC,EAAY,GAClBpC,EAAImC,KAAI,SAACf,GACLgB,EAAU/B,KACR,CACEtG,KAAMqH,EAAKrH,KACXoG,SAAUiB,EAAKjB,SACfC,SAAUgB,EAAKhB,cAIvB8B,EAAY7B,KAAK+B,MAEZF,EAKaG,CAAetC,GAG7BuC,EAAI,IAAIhC,EAEd4B,EAAYC,KAAI,SAACnC,GAAD,OACdA,EAAImC,KAAI,SAACf,GACPA,EAAKL,KAAO,IACZK,EAAKmB,UAAOC,QAIhB,IAAMC,EAAeP,EAAY5I,EAAO6G,UAAU7G,EAAO8G,UACzDqC,EAAa1B,KAAO,EACpBuB,EAAE5B,IAAI+B,GAMN,IAJA,IAAImB,EAAa1B,EAAY3I,EAAK4G,UAAU5G,EAAK6G,UAE7CyD,GAAY,EAEU,IAAnBvB,EAAE9B,MAAMM,QAGb,IAFA,IAAM6B,EAAIL,EAAE/B,eACNc,EAAaF,EAAce,EAAaS,GACrC9B,EAAI,EAAGA,EAAIQ,EAAWP,OAAQD,IAAK,CAC1C,IAAM+B,EAAIvB,EAAWR,GACrB,GAAe,YAAX+B,EAAE7I,KAAN,CAMA,GAHAuI,EAAE5B,IAAIkC,GAGS,SAAXA,EAAE7I,KAAiB,CACrB8J,GAAY,EACZD,EAAWrB,KAAO,CAACI,EAAExC,SAAUwC,EAAEvC,UACjCkC,EAAErB,QACF,MAEF2B,EAAE7I,KAAO,UACT6I,EAAE7B,KAAOW,EAAeQ,EAAaU,GAAKlB,EAAekB,EAAGgB,GAC5DhB,EAAEL,KAAO,CAACI,EAAExC,SAAUwC,EAAEvC,UACxBkC,EAAE5B,IAAIkC,GACNX,EAAoB5B,KAClB,CACEF,SAAUyC,EAAEzC,SACZC,SAAUwC,EAAExC,SACZrG,KAAM,aAMd,GAAI8J,EAEF,IADA,IAAIf,EAAmBZ,EAAY0B,EAAWrB,KAAK,IAAIqB,EAAWrB,KAAK,IAChEO,EAAiBP,MACtBO,EAAiB/I,KAAO,eACxBkI,EAAoB5B,KAClB,CACEF,SAAU2C,EAAiB3C,SAC3BC,SAAU0C,EAAiB1C,SAC3BrG,KAAM,iBAGV+I,EAAmBZ,EAAYY,EAAiBP,KAAK,IAAIO,EAAiBP,KAAK,IAKnF,IAAI1B,EAAI,EACJkC,GAAS,EACbd,EAAoBE,KAAI,SAACa,GACvBC,YAAW,WACIlD,EAAMiD,EAAW7C,UAAU6C,EAAW5C,UAC9CrG,KAAOiJ,EAAWjJ,KACvBiI,EAAce,GACdA,GAAUA,IACTrE,EAAMmC,GACTA,OAEFoC,YAAW,WACT/H,EAAY,cACXwD,EAAMmC,GAET,IAAMqC,EAAcW,EAAY,QAAU,YAC1CzE,QAAQC,IAAI,qBAAuB6D,GDjD/BY,CAAM/D,EAAOA,EAAM,GAAG,GAAIA,EAAM,GAAG,IAAK4D,EAAc3B,EAAe9G,IAsBRyD,SAAUA,EAAUiB,WAnClE,WACjB,IAAM8D,EAAe5D,IACrB0D,EAASE,GACTxI,EAAY,UAgC+F2E,UAlB3F,WAChB,IAAIxB,GAAe,EACnB0B,EAAMoC,KAAI,SAACnC,GACTA,EAAImC,KAAI,SAACf,GACW,iBAAdA,EAAKrH,MAAyC,YAAdqH,EAAKrH,KACvCqH,EAAKrH,KAAO,YACW,SAAdqH,EAAKrH,OACdsE,GAAe,SAIrBnD,EAAYmD,EAAe,aAAe,SAC1Ce,QAAQC,IAAI,mBAOTU,EAAMoC,KAAI,SAACnC,EAAKG,GACf,OAAO,yBAAKnF,IAAKmF,EAAUzF,MAAO,CAACe,QAAS,OAAQwB,cAAe,QAChE+C,EAAImC,KAAI,SAACf,EAAMhB,GAAP,OACP,kBAAC,EAAD,CACEpF,IAAKA,IACLjB,KAAMqH,EAAKrH,KACXK,MAAOA,EACPG,cAAeA,EACfC,YAAa,CAAC2F,EAAUC,cE9EvB2D,EANY,WACzB,OACE,kBAAC,EAAD,OCIWC,EARA,WACb,OACE,yBAAKtJ,MAAO,CAACkE,aAAc,QACzB,wBAAIlE,MAAO,CAAC0B,SAAU,QAASC,MAAM,OAAD,OAAS,CAAC,IAAI,IAAI,KAAlB,OAApC,8BCmBS4H,MApBf,WASE,OACE,oCAEE,yBAAKvJ,MAVc,CAErBe,QAAS,QACT+D,WAAY,OACZ0E,YAAa,SAOT,kBAAC,EAAD,MACA,kBAAC,EAAD,SCbRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5b07c7e3.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { render } from '@testing-library/react'\n\nconst typeToColorMap = {\n  source: '#63C132',\n  goal: '#cf2e2e',\n  wall: `rgb(${[220,220,220]})`,\n  visited: '#2d749a',\n  shortestPath: '#ffff60',\n  unvisited: ''\n}\n\nconst Node = (props) => {\n  var [type, setType] = useState(props.type)\n  const [internalMouseDown, setInternalMouseDown] = useState(false)\n  const runState = props.hooks.runState\n\n  const updateType = (newType) => {\n    setType(newType)\n    props.setTypeInNode(newType, props.coordinates)\n  }\n  \n  const handleMakeWall = () => {\n    if (props.type === 'unvisited') updateType('wall')\n    else if (props.type === 'wall') updateType('unvisited')\n    setInternalMouseDown(true)\n  }\n\n  const style = {\n    height: '2.5em',\n    width: '2.5em',\n    border: `1px solid rgb(${[220,220,220]})`,\n    background: typeToColorMap[type],\n    ...(internalMouseDown && type === 'wall' && {transform: `scale(${1.3})`})\n  }\n\n  const onMouseDown = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    props.hooks.setRunState('customized')\n\n    props.hooks.setIsMouseDownInArray(true)\n    handleMakeWall()\n  }\n  const onMouseEnter = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    if (props.hooks.isMouseDownInArray) {\n      props.hooks.setIsMouseDownInArray(true) // To prevent mouseUp outside of grid bug\n      handleMakeWall()\n    }\n  }\n  const onMouseUp = () => {\n    props.hooks.setIsMouseDownInArray(false)\n    setInternalMouseDown(false)\n  }\n  const onMouseLeave = () => {\n    setInternalMouseDown(false) // to stop scale(1.3)\n    props.hooks.setIsMouseDownInArray(false) // To prevent mouseUp outside of grid bug\n  }\n  return (\n    <div key={props.key} style={style} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}/>\n  )\n}\n\nexport default Node","import React, {useState} from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { Button } from '@material-ui/core'\n\nconst modal = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\nconst paper = {\n  backgroundColor: `rgb(${[40,40,40]})`,\n  border: `2px solid rgb(${[220,220,220]})`,\n  textAlign: 'left',\n  padding: '1em',\n}\n\nconst TransitionsModal = () => {\n\n  const [open, setOpen] = useState(false)\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button style={{fontSize: '0.9em', color: 'white', margin: 0 }} onClick={handleOpen}>\n        <HelpIcon style={{fontSize: '0.9em'}} />\n      </Button>\n      <Modal\n        style={modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div style={paper}>\n            <h2 > Welcome to my Pathfinding visualizer</h2>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <p style={{color: '#63C132'}}>Green cell&nbsp;</p>\n              <p> - start node </p>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <p style={{color: '#cf2e2e'}}>Red cell&nbsp;</p>\n              <p> - goal node </p>\n            </div>\n            <p> 1. Click inside the grid and hold down your mouse button to draw walls </p>\n            <p> 2. Clicking again will allow you to remove walls </p>\n            <p> 3. Select algorithm of choice (Currently only Dijkstra :D) </p>\n            <p> 4. Select a different speed if you feel like it </p>\n            <p> 5. Hit play :)  </p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal","import React, { useState } from 'react'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\nimport { Button, MenuItem, Menu, Link } from '@material-ui/core'\n\nconst MoreMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <>\n      <Button style={{fontSize: '1em', color: 'white', margin: 0, marginTop: '6px'}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://www.youtube.com/watch?v=dQw4w9WgXcQ' style={{color: 'black'}}>\n            Sorting Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/algorithm-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n        </Menu>\n    </>\n  )\n}\n\nexport default MoreMenu","import React, { useState } from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport TransitionModal from './modal.js'\nimport MoreMenu from './moreMenu.js'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C',\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  const isEmpty = props.runState === 'empty'\n  const isCustomized = props.runState === 'customized'\n  const isRunning = props.runState === 'running'\n  const isFinished = props.runState === 'finished'\n\n  // ALGORITHM SELECT\n  const [algorithm, setAlgorithm] = useState('')\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // SPEED SELECT\n  const [speed, setSpeed] = useState('medium')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value)\n    props.setSpeed(event.target.value)\n  }\n\n  // PLAY BUTTON\n  const handlePlayClick = () => {\n    props.runAlgorithm(algorithm)\n  }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'dijkstra'}>Dijkstra</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm === '' || isRunning || isFinished ? 'gray' : '#63C132'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isRunning}\n        onClick={handlePlayClick}\n      >\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isEmpty || isRunning ? 'gray' : '#cf2e2e'}}\n        variant=\"contained\"\n        disabled={isEmpty || isRunning}\n        onClick={isCustomized ? props.resetNodes : props.clearPath}\n      >\n        { isEmpty || isCustomized ? <HighlightOffIcon /> : <ReplayIcon /> }\n      </Button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '3em'}}>\n        <TransitionModal />\n        <MoreMenu />\n      </div>\n    </div>\n  )\n}\n\n\n//<MenuItem value={'aStar'}>A*</MenuItem>\n//<MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n//<MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n\nexport default ButtonGroup","// UNIQUE keys for every render, otherwise resetting wont work because the hook in each node\n\nconst getInitialNodes = () => {\n  const numRows = 11 // 21\n  const numCols = 21 // 50\n  const nodes = []\n  // Initialize the nodes\n  for (let row = 0; row < numRows; row++) {\n    const currentRow = []\n    for (let col = 0; col < numCols; col++) {\n      const rowIndex = row\n      const colIndex = col\n      var type = 'unvisited'\n      // 10 og 4\n      // 10 og 44\n      if (row === 5 && col === 4) {type = 'source'}\n      if (row === 5 && col === 16) {type = 'goal'}\n      currentRow.push(\n        { type, rowIndex, colIndex }\n      )\n    }\n    nodes.push(currentRow)\n  }\n  return nodes\n}\n\nexport default getInitialNodes","// sorted queue with shortest distance and earliest push first\nexport class Queue {\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n\nexport class aStarQueue {\n  // sorted queue with shortest distance and earliest push first\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n","  export const getNeighboors = (nodes, node) => {\n  const neighboors = []\n  const row = node.rowIndex\n  const col = node.colIndex\n\n  // UP\n  if (row > 0) {\n    const upNode = nodes[row - 1][col]\n    if (upNode.type === 'unvisited' || upNode.type === 'goal') {\n      neighboors.push(upNode) \n    }\n  }\n  // RIGHT 49\n  if (col < 20) {\n    const rightNode = nodes[row][col + 1]\n    if (rightNode.type === 'unvisited' || rightNode.type === 'goal') {\n      neighboors.push(rightNode) \n    }\n  }\n  // DOWN\n  if (row < 10) {\n    const downNode = nodes[row + 1][col]\n    if (downNode.type === 'unvisited' || downNode.type === 'goal') {\n      neighboors.push(downNode) \n    }\n  }\n  // LEFT\n  if (col > 0) {\n    const leftNode = nodes[row][col - 1]\n    if (leftNode.type === 'unvisited' || leftNode.type === 'goal') {\n      neighboors.push(leftNode) \n    }\n  }\n\n  return neighboors\n}\n\nexport const getManDistance = (u, v) => {\n  return Math.sqrt( (u.rowIndex - v.rowIndex)**2 + (u.colIndex - v.colIndex)**2)\n}\n\n/*\nconst test = [{x: 1}, {x: 2}]\nconst a = test[0]\na.x = 3\nconsole.log(test)\n\n\nconst test = () => {\n  var t = 'hei'\n  var i = 1\n  for(var x = 0; x < 5; x++) {\n    (function() {\n      setTimeout(function() {\n        console.log(t)\n        t = 'hade'\n      }, 1000*i)\n    }(i))\n    i++\n  }\n  for(var x = 0; x < 5; x++) {\n    (function() {\n      setTimeout(function() {\n        console.log(t)\n      }, 1000*i)\n    }(i))\n    i++\n  }\n}\ntest() */","import { Queue } from './queue.js'\nimport { getNeighboors, getManDistance } from './utils.js'\n\nconst getHelperNodes = (nodes) => {\n  const helperNodes = []\n  nodes.map((row) => {\n    const helperRow = []\n    row.map((node) => {\n        helperRow.push(\n          {\n            type: node.type,\n            rowIndex: node.rowIndex,\n            colIndex: node.colIndex\n          }\n        )\n    })\n    helperNodes.push(helperRow)\n  })\n  return helperNodes\n}\n\nexport const Dijkstra = (nodes, source, speed, setUpdateHook, setRunState) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    //console.log(U)\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      Q.add(V)\n      const alt = U.dist + getManDistance(U, V)\n      if (alt < V.dist) {\n        V.dist = alt\n        V.prev = [U.rowIndex, U.colIndex] // We keep track of index instead of node for memory purposes -> Becomes a long chain\n      }\n      changedNodesInOrder.push(\n        {\n          rowIndex: V.rowIndex,\n          colIndex: V.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  // VISUALIZE:\n  var i = 1\n  var update = true\n  changedNodesInOrder.map((helperNode) => {\n    setTimeout(() => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      setUpdateHook(update) // this has to be done to make the parent component rerender, thus displaying the updates\n      update = !update\n    }, speed*i)\n    i++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n  }, speed*i)\n\n  const foundString = goalNode ? 'found' : 'not found'\n  console.log('Dijkstra finished: Goal ' + foundString)\n}\n","import React, { useState, useEffect } from 'react'\nimport Node from './node.js'\nimport ButtonGroup from '../buttonGroup/buttonGroup.js'\nimport getInitialNodes from './initialNodes.js'\nimport { Dijkstra } from '../../algorithms/dijkstra.js'\nimport { AStar } from '../../algorithms/aStar.js'\n\nconst algorithmMap = {\n  dijkstra: Dijkstra\n}\nconst speedLabelToSpeedMap = {\n  slow: 200,\n  medium: 100,\n  fast: 60\n}\n\nvar key = 0\nconst NodeArray = () => {\n  const [nodes, setNodes] = useState([])\n  const [isMouseDownInArray, setIsMouseDownInArray] = useState(false)\n  const [runState, setRunState] = useState('empty') // empty, cusomized, running, finished\n  //const [algorithm, setAlgorithm] = useState('') // IKKE NØDVENDIG? -> Kan holdes i ButtonGroup -> Samme med speed -> Nei\n  const [speed, setSpeed] = useState('medium')\n  const [updateHook, setUpdateHook] = useState(false)\n\n  const hooks = {\n    isMouseDownInArray,\n    setIsMouseDownInArray,\n    runState,\n    setRunState\n  }\n\n  // basicly componentDidMount()\n  useEffect(() => {\n    const initialNodes = getInitialNodes()\n    setNodes(initialNodes)\n  }, [])\n\n  const setTypeInNode = (type, coordinates) => {\n    const row = coordinates[0]\n    const col = coordinates[1]\n    nodes[row][col].type = type\n  }\n\n  const resetNodes = () => {\n    const initialNodes = getInitialNodes() // clears the grid\n    setNodes(initialNodes)\n    setRunState('empty')\n  }\n\n  const runAlgorithm = (algorithm) => {\n    // const algorithmToRun = algorithmMap[algorithm]\n    setRunState('running')\n    const currentSpeed = speedLabelToSpeedMap[speed]\n    if (algorithm === 'dijkstra') {\n      Dijkstra(nodes, nodes[5][4], currentSpeed, setUpdateHook, setRunState)\n    } else if (algorithm) {\n      AStar(nodes, nodes[5][4], nodes[5][16], currentSpeed, setUpdateHook, setRunState)\n    }\n  }\n\n  const clearPath = () => {\n    var isCustomized = false\n    nodes.map((row) => {\n      row.map((node) => {\n        if (node.type === 'shortestPath' || node.type === 'visited') {\n          node.type = 'unvisited'\n        } else if (node.type === 'wall') {\n          isCustomized = true\n        }\n      })\n    })\n    setRunState(isCustomized ? 'customized' : 'empty')\n    console.log('path cleared')\n  }\n  // setAlgorithmInParent={setAlgorithm}\n  //console.log('rendered')\n  return (\n    <div>\n      <ButtonGroup runState={runState} runAlgorithm={runAlgorithm} setSpeed={setSpeed} resetNodes={resetNodes} clearPath={clearPath} />\n      {nodes.map((row, rowIndex) => {\n        return <div key={rowIndex} style={{display: 'flex', flexDirection: 'row'}}>\n          {row.map((node, colIndex) =>\n            <Node\n              key={key++}\n              type={node.type}\n              hooks={hooks}\n              setTypeInNode={setTypeInNode}\n              coordinates={[rowIndex, colIndex]}\n            />\n          )}\n        </div>\n      })}\n    </div>\n  )\n}\n\nexport default NodeArray","import { Queue } from './queue.js'\nimport { getNeighboors, getManDistance } from './utils.js'\n\nconst getHelperNodes = (nodes) => {\n  const helperNodes = []\n  nodes.map((row) => {\n    const helperRow = []\n    row.map((node) => {\n        helperRow.push(\n          {\n            type: node.type,\n            rowIndex: node.rowIndex,\n            colIndex: node.colIndex\n          }\n        )\n    })\n    helperNodes.push(helperRow)\n  })\n  return helperNodes\n}\n\nexport const AStar = (nodes, source, goal, speed, setUpdateHook, setRunState) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var helperGoal = helperNodes[goal.rowIndex][goal.colIndex]\n\n  var goalFound = false // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    const neighboors = getNeighboors(helperNodes, U)\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'visited') {\n        continue\n      }\n      Q.add(V)\n\n\n      if (V.type === 'goal') { // this should technically be before the for-loop, but here it makes a lot of extra work and is unnecessary\n        goalFound = true\n        helperGoal.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      V.dist = getManDistance(helperNodes, V) + getManDistance(V, helperGoal) // HEURISTIC + DISTANCE TO GOAL\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n      changedNodesInOrder.push(\n        {\n          rowIndex: V.rowIndex,\n          colIndex: V.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n  }\n\n  if (goalFound) {\n    var shortestPathNode = helperNodes[helperGoal.prev[0]][helperGoal.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  // VISUALIZE:\n  var i = 1\n  var update = true\n  changedNodesInOrder.map((helperNode) => {\n    setTimeout(() => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      setUpdateHook(update) // this has to be done to make the parent component rerender, thus displaying the updates\n      update = !update\n    }, speed*i)\n    i++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n  }, speed*i)\n\n  const foundString = goalFound ? 'found' : 'not found'\n  console.log('A* finished: Goal ' + foundString)\n}","import React from 'react'\n// import ButtonGroup from '../buttonGroup.js'\nimport NodeArray from './nodeArray.js'\n\nexport const PathFinding = () => {\n  return (\n    <NodeArray />\n  )\n}\n\nexport default PathFinding","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div style={{marginBottom: '2em'}}>\n      <h1 style={{fontSize: '3.5em', color: `rgb(${[250,250,250]})`}}> Pathfinding Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport PathFinding from './views/pathFinding/pathFinding.js'\nimport Header from './views/header.js'\n\nfunction App() {\n\n  const algorithmStyle = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <>\n\n      <div style={algorithmStyle}>\n        <Header />\n        <PathFinding />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}