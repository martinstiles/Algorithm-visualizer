{"version":3,"sources":["views/pathFinding/node.js","views/buttonGroup.js","views/pathFinding/initialNodes.js","views/pathFinding/nodeArray.js","views/pathFinding/pathFinding.js","views/navbar.js","App.js","index.js"],"names":["typeToColorMap","source","goal","wall","visited","unvisited","Node","props","useState","type","setType","internalMouseDown","setInternalMouseDown","runState","hooks","handleMakeWall","newType","setTypeInNode","coordinates","render","style","height","width","border","background","transform","key","onMouseDown","setRunState","setIsMouseDownInArray","onMouseUp","onMouseEnter","isMouseDownInArray","onMouseLeave","ButtonGroup","selectStyle","backgroundColor","minWidth","textAlign","isEmpty","isCustomized","isRunning","React","algorithm","setAlgorithm","speed","setSpeed","anchorEl","setAnchorEl","handleMoreClose","marginBottom","display","flexDirection","justifyContent","FormControl","variant","InputLabel","color","fontStyle","Select","value","onChange","event","target","label","autoWidth","MenuItem","marginLeft","Button","ariant","disabled","onClick","resetNodes","fontSize","margin","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","Link","href","getInitialNodes","nodes","row","currentRow","col","rowIndex","colIndex","push","NodeArray","setNodes","useEffect","initialNodes","map","node","PathFinding","Navbar","App","marginRight","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3625b3d7.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { render } from '@testing-library/react'\n\nconst typeToColorMap = {\n  source: '#63C132',\n  goal: '#cf2e2e',\n  wall: `rgb(${[220,220,220]})`,\n  visited: 'blue',\n  unvisited: ''\n}\n\nconst Node = (props) => {\n  var [type, setType] = useState(props.type)\n  const [internalMouseDown, setInternalMouseDown] = useState(false)\n  const runState = props.hooks.runState\n\n  const updateType = (newType) => {\n    setType(newType)\n    props.setTypeInNode(newType, props.coordinates)\n  }\n  \n  const handleMakeWall = () => {\n    if (props.type === 'unvisited') {\n      updateType('wall')\n      setInternalMouseDown(true)\n      render()\n    }\n  }\n\n  const style = {\n    height: '1.5em',\n    width: '1.5em',\n    border: `1px solid rgb(${[220,220,220]})`,\n    background: typeToColorMap[type],\n    ...(internalMouseDown && {transform: `scale(${1.3})`})\n  }\n\n  const onMouseDown = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    props.hooks.setRunState('customized')\n\n    props.hooks.setIsMouseDownInArray(true)\n    handleMakeWall()\n  }\n  const onMouseEnter = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    if (props.hooks.isMouseDownInArray) {\n      props.hooks.setIsMouseDownInArray(true) // To prevent mouseUp outside of grid bug\n      handleMakeWall()\n    }\n  }\n  const onMouseUp = () => {\n    props.hooks.setIsMouseDownInArray(false)\n    setInternalMouseDown(false)\n  }\n  const onMouseLeave = () => {\n    setInternalMouseDown(false) // to stop scale(1.3)\n    props.hooks.setIsMouseDownInArray(false) // To prevent mouseUp outside of grid bug\n  }\n\n  return (\n    <div key={props.key} style={style} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}/>\n  )\n}\n\nexport default Node","import React from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem, Menu, Link } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C', //'#A0D2DB', //`rgb(${[220,220,220]})`\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  const isEmpty = props.runState === 'empty'\n  const isCustomized = props.runState === 'customized'\n  const isRunning = props.runState === 'running'\n\n  const [algorithm, setAlgorithm] = React.useState('')\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  }\n  const [speed, setSpeed] = React.useState('fast')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value);\n  }\n  // material:\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'aStar'}>A*</MenuItem>\n          <MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n          <MenuItem value={'breadthFirst'}>BreadthFirst</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm !== '' ? '#63C132' : 'gray'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isRunning}>\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isCustomized ? '#cf2e2e' : 'gray'}}\n        variant=\"contained\"\n        disabled={isEmpty}\n        onClick={props.resetNodes}>\n        { isEmpty || isCustomized ? <HighlightOffIcon /> : <ReplayIcon /> }\n      </Button>\n      </div>\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '3em'}}>\n        <Button style={{fontSize: '1em', color: 'white', margin: 0}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link href='' style={{color: 'black'}}>\n            Sorting Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/algorithm-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n        </Menu>\n      </div>\n    </div>\n  )\n}\n\n// <GitHubIcon style={{marginLeft: '5px'}} fontSize={'small'} />\n// <HomeIcon style={{marginLeft: '5px'}}/>\nexport default ButtonGroup","// UNIQUE keys for every render, otherwise resetting wont work because the hook in each node\nvar key = 0\nconst getInitialNodes = () => {\n  const numRows = 21\n  const numCols = 50\n  const nodes = []\n  // Initialize the nodes\n  for (let row = 0; row < numRows; row++) {\n    const currentRow = []\n    for (let col = 0; col < numCols; col++) {\n      const rowIndex = row\n      const colIndex = col\n      var type = 'unvisited'\n      if (row === 10 && col === 4) {type = 'source'}\n      if (row === 10 && col === 44) {type = 'goal'}\n      currentRow.push([\n        { type, key, rowIndex, colIndex }\n      ])\n      key++\n    }\n    nodes.push(currentRow)\n  }\n  return nodes\n}\n\nexport default getInitialNodes","import React, { useState, useEffect } from 'react'\nimport Node from './node.js'\nimport ButtonGroup from '../buttonGroup.js'\nimport getInitialNodes from './initialNodes.js'\n\n\nconst NodeArray = () => {\n  const [nodes, setNodes] = useState([])\n  const [isMouseDownInArray, setIsMouseDownInArray] = useState(false)\n  const [runState, setRunState] = useState('empty') // empty, cusomized, running, finished\n  const hooks = {\n    isMouseDownInArray,\n    setIsMouseDownInArray,\n    runState,\n    setRunState\n  }\n\n  // basicly componentDidMount()\n  useEffect(() => {\n    const initialNodes = getInitialNodes()\n    setNodes(initialNodes)\n  }, [])\n\n  const setTypeInNode = (type, coordinates) => {\n    const row = coordinates[0]\n    const col = coordinates[1]\n    nodes[row][col][0].type = type\n  }\n\n  const resetNodes = () => {\n    const initialNodes = getInitialNodes() // clears the grid\n    setNodes(initialNodes)\n    setRunState('empty')\n  }\n  //console.log(nodes)\n  \n  return (\n    <div>\n      <ButtonGroup runState={runState} resetNodes={resetNodes} />\n      {nodes.map((row, rowIndex) => {\n        return <div key={rowIndex} style={{display: 'flex', flexDirection: 'row'}}>\n          {row.map((node, colIndex) =>\n            <Node\n              key={node[0].key}\n              type={node[0].type}\n              hooks={hooks}\n              setTypeInNode={setTypeInNode}\n              coordinates={[rowIndex, colIndex]}\n            />\n          )}\n        </div>\n      })}\n    </div>\n  )\n}\n\nexport default NodeArray","import React from 'react'\n// import ButtonGroup from '../buttonGroup.js'\nimport NodeArray from './nodeArray.js'\n\nexport const PathFinding = () => {\n  return (\n    <NodeArray />\n  )\n}\n\nexport default PathFinding","import React from 'react'\n\nconst Navbar = () => {\n  const style = {\n    margin: '0 0 7em 0',\n    left: 0,\n    position: 'fixed',\n    width: '100%',\n    height: '5em',\n    backgroundColor: `rgb(${[220,220,220]})`,\n    color: `rgb(${[40,40,40]})`,\n    display: 'flex',\n    flexDirection: 'row'\n  }\n  const test = {\n    marginBottom: '2em'\n  }\n\n  return (\n    <div style={test}>\n      <h1 style={{fontSize: '3.5em'}}> Algorithm Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport PathFinding from './views/pathFinding/pathFinding.js'\nimport Navbar from './views/navbar'\n\nfunction App() {\n\n  const algorithmStyle = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <>\n\n      <div style={algorithmStyle}>\n        <Navbar />\n        <PathFinding />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}