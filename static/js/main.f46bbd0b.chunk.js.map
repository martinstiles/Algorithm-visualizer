{"version":3,"sources":["views/header.js","views/pathFinding/node.js","views/buttonGroup/modal.js","views/buttonGroup/moreMenu.js","views/buttonGroup/buttonGroup.js","views/pathFinding/initialNodes.js","algorithms/queue.js","algorithms/visualize.js","algorithms/utils.js","algorithms/dijkstra.js","algorithms/aStar.js","algorithms/depthFirst.js","algorithms/breadthFirst.js","algorithms/bestFirst.js","views/pathFinding/nodeArray.js","App.js","index.js"],"names":["Header","style","marginBottom","fontSize","color","typeToColorMap","source","goal","wall","visited","shortestPath","unvisited","Node","props","useState","type","setType","internalMouseDown","setInternalMouseDown","runState","hooks","updateType","newType","setTypeInNode","coordinates","handleMakeWall","height","width","border","background","transform","key","onMouseDown","setRunState","setIsMouseDownInArray","onMouseUp","onMouseEnter","isMouseDownInArray","onMouseLeave","modal","display","alignItems","justifyContent","paper","backgroundColor","textAlign","padding","TransitionsModal","localStorage","getItem","open","setOpen","handleClose","setItem","Button","margin","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","marginLeft","marginRight","flexDirection","MoreMenu","anchorEl","setAnchorEl","handleMoreClose","marginTop","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","Link","target","href","ButtonGroup","selectStyle","minWidth","isEmpty","isCustomized","isRunning","isFinished","algorithm","setAlgorithm","speed","setSpeed","FormControl","variant","InputLabel","fontStyle","Select","value","onChange","label","autoWidth","ariant","disabled","runAlgorithm","resetNodes","clearPath","getInitialNodes","nodes","row","currentRow","col","rowIndex","colIndex","push","Queue","getFirstElem","array","shift","add","elem","added","i","length","dist","splice","clear","this","visualize","changedNodesInOrder","setNodesVisited","setNodesInPath","nodesVisited","nodesInPath","map","helperNode","node","setTimeout","getNeighboors","neighboors","upNode","rightNode","downNode","leftNode","getManDistance","u","v","Math","sqrt","getHelperNodes","helperNodes","helperRow","Dijkstra","Q","prev","undefined","helperSource","goalNode","U","V","alt","shortestPathNode","AStar","currentDistance","helperGoal","goalFound","DepthFirst","pop","BreadthFirst","BestFirst","speedLabelToSpeedMap","slow","medium","fast","instant","NodeArray","setNodes","useEffect","initialNodes","useCallback","labelToAlgorithm","useMemo","dijkstra","aStar","depthFirst","breadthFirst","bestFirst","currentAlgorithm","Algorithm","algorithmUsesGoalNode","currentSpeed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f46bbd0b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <div style={{marginBottom: '2em'}}>\n      <h1 style={{fontSize: '3.5em', color: `rgb(${[250,250,250]})`}}> Pathfinding Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React, {useState} from 'react'\n\nconst typeToColorMap = {\n  source: '#63C132',\n  goal: '#cf2e2e',\n  wall: `rgb(${[220,220,220]})`,\n  visited: '#2d749a',\n  shortestPath: '#ffff60',\n  unvisited: ''\n}\n\nconst Node = (props) => {\n  const [type, setType] = useState(props.type)\n  const [internalMouseDown, setInternalMouseDown] = useState(false)\n  const runState = props.hooks.runState\n\n  const updateType = (newType) => {\n    setType(newType)\n    props.setTypeInNode(newType, props.coordinates)\n  }\n  \n  const handleMakeWall = () => {\n    if (props.type === 'unvisited') updateType('wall')\n    else if (props.type === 'wall') updateType('unvisited')\n    setInternalMouseDown(true)\n  }\n\n  const style = {\n    height: '2.5em',\n    width: '2.5em',\n    border: `1px solid rgb(${[220,220,220]})`,\n    background: typeToColorMap[type],\n    ...(internalMouseDown && type === 'wall' && {transform: `scale(${1.3})`})\n  }\n\n  const onMouseDown = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    props.hooks.setRunState('customized')\n\n    props.hooks.setIsMouseDownInArray(true)\n    handleMakeWall()\n  }\n  const onMouseEnter = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    if (props.hooks.isMouseDownInArray) {\n      props.hooks.setIsMouseDownInArray(true) // To prevent mouseUp outside of grid bug\n      handleMakeWall()\n    }\n  }\n  const onMouseUp = () => {\n    props.hooks.setIsMouseDownInArray(false)\n    setInternalMouseDown(false)\n  }\n  const onMouseLeave = () => {\n    setInternalMouseDown(false) // to stop scale(1.3)\n    props.hooks.setIsMouseDownInArray(false) // To prevent mouseUp outside of grid bug\n  }\n  return (\n    <div key={props.key} style={style} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}/>\n  )\n}\n\nexport default Node","import React, {useState} from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { Button } from '@material-ui/core'\n\nconst modal = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\nconst paper = {\n  backgroundColor: `rgb(${[40,40,40]})`,\n  border: `2px solid rgb(${[220,220,220]})`,\n  textAlign: 'left',\n  padding: '1em',\n}\n\nconst TransitionsModal = () => {\n\n  const visited = localStorage.getItem('visited')\n  const [open, setOpen] = useState(visited ? false : true)\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    localStorage.setItem('visited', true)\n  }\n\n  return (\n    <div>\n      <Button style={{fontSize: '0.9em', color: 'white', margin: 0 }} onClick={handleOpen}>\n        <HelpIcon style={{fontSize: '0.9em'}} />\n      </Button>\n      <Modal\n        style={modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div style={paper}>\n            <div style={{textAlign: 'center'}}>\n              <h2 > Welcome to my Pathfinding Visualizer</h2>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'space-between', marginLeft: '1em', marginRight: '1em'}}>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#63C132'}}> Green cell&nbsp; </p>\n                <p> - start node </p>\n              </div>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#2d749a'}}> Blue cell&nbsp; </p>\n                <p> - expanded node </p>\n              </div>\n            </div>\n\n            <div style={{display: 'flex', justifyContent: 'space-between', marginLeft: '1em', marginRight: '1em'}}>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#cf2e2e'}}> Red cell&nbsp; </p>\n                <p> - goal node </p>\n              </div>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#ffff60'}}> Yellow cell&nbsp; </p>\n                <p> - shortest path </p>\n              </div>\n            </div>\n            <p> 1. Click inside the grid and hold down your mouse button to draw walls </p>\n            <p> 2. Clicking again will allow you to remove walls </p>\n            <p> 3. Select algorithm of choice </p>\n            <p> 4. Select a different speed if you feel like it </p>\n            <p> 5. Hit play :)  </p>\n            <div style={{textAlign: 'center'}}>\n              <Button\n                style={{color: `rgb(${[20,20,20]})`, backgroundColor: `rgb(${[220,220,220]})`, fontSize: '0.9em'}}\n                onClick={handleClose}>\n                Let me play already\n              </Button>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal","import React, { useState } from 'react'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\nimport { Button, MenuItem, Menu, Link } from '@material-ui/core'\n\nconst MoreMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <>\n      <Button style={{fontSize: '1em', color: 'white', margin: 0, marginTop: '6px'}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/sorting-visualizer/' style={{color: 'black'}}>\n            Sorting Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/pathfinding-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://www.youtube.com/watch?v=dQw4w9WgXcQ' style={{color: 'black'}}>\n            Free stuff\n          </Link></MenuItem>\n        </Menu>\n    </>\n  )\n}\n\nexport default MoreMenu\n","import React, { useState } from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport TransitionModal from './modal.js'\nimport MoreMenu from './moreMenu.js'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C',\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  const isEmpty = props.runState === 'empty'\n  const isCustomized = props.runState === 'customized'\n  const isRunning = props.runState === 'running'\n  const isFinished = props.runState === 'finished'\n\n  // ALGORITHM SELECT\n  const [algorithm, setAlgorithm] = useState('')\n  const handleAlgorithmChange = (event) => {\n    props.setAlgorithm(event.target.value)\n    setAlgorithm(event.target.value)\n  }\n\n  // SPEED SELECT\n  const [speed, setSpeed] = useState('medium')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value)\n    props.setSpeed(event.target.value)\n  }\n\n  // PLAY BUTTON\n  const handlePlayClick = () => {\n    props.runAlgorithm(algorithm)\n  }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'aStar'}>A*</MenuItem>\n          <MenuItem value={'bestFirst'}>Best First</MenuItem>\n          <MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n          <MenuItem value={'dijkstra'}>Dijkstra</MenuItem>\n          <MenuItem value={'depthFirst'}>Depth First</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n          <MenuItem value={'instant'}>Instant</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm === '' || isRunning || isFinished ? 'gray' : '#63C132'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isRunning}\n        onClick={handlePlayClick}\n      >\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isEmpty || isRunning ? 'gray' : '#cf2e2e'}}\n        variant=\"contained\"\n        disabled={isEmpty || isRunning}\n        onClick={isCustomized ? props.resetNodes : props.clearPath}\n      >\n        { isEmpty || isCustomized ? <HighlightOffIcon /> : <ReplayIcon /> }\n      </Button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '2.65em'}}>\n        <TransitionModal />\n        <MoreMenu />\n      </div>\n    </div>\n  )\n}\n\n\n//<MenuItem value={'aStar'}>A*</MenuItem>\n//<MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n//<MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n\nexport default ButtonGroup","const getInitialNodes = () => {\n  const numRows = 11 // 21\n  const numCols = 21 // 50\n  const nodes = []\n  // Initialize the nodes\n  for (let row = 0; row < numRows; row++) {\n    const currentRow = []\n    for (let col = 0; col < numCols; col++) {\n      const rowIndex = row\n      const colIndex = col\n      var type = 'unvisited'\n      // 10 og 4\n      // 10 og 44\n      if (row === 5 && col === 4) {type = 'source'}\n      if (row === 5 && col === 16) {type = 'goal'}\n      currentRow.push(\n        { type, rowIndex, colIndex }\n      )\n    }\n    nodes.push(currentRow)\n  }\n  return nodes\n}\n\nexport default getInitialNodes","// sorted queue with shortest distance, and then earliest add, first in list\nexport class Queue {\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n","// VISUALIZE:\nexport const visualize = (changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath) => {\n  setNodesVisited(0)\n  setNodesInPath(0)\n  var nodesVisited = 1\n  var nodesInPath = 1\n  var i = 1\n\n  // instant\n  if (speed === 0) {\n    changedNodesInOrder.map((helperNode) => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      if (node.type !== 'shortestPath') setNodesVisited(nodesVisited++)\n      if (node.type === 'shortestPath') setNodesInPath(nodesInPath++)\n    })\n    setRunState('finished')\n    return\n  }\n\n  changedNodesInOrder.map((helperNode) => {\n    setTimeout(() => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      if (node.type !== 'shortestPath') setNodesVisited(nodesVisited++)\n      if (node.type === 'shortestPath') setNodesInPath(nodesInPath++)\n    }, speed*i)\n    i++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n  }, speed*i)\n}\n","  export const getNeighboors = (nodes, node) => {\n  const neighboors = []\n  const row = node.rowIndex\n  const col = node.colIndex\n\n  // UP\n  if (row > 0) {\n    const upNode = nodes[row - 1][col]\n    if (upNode.type === 'unvisited' || upNode.type === 'goal') {\n      neighboors.push(upNode) \n    }\n  }\n  // RIGHT 49\n  if (col < 20) {\n    const rightNode = nodes[row][col + 1]\n    if (rightNode.type === 'unvisited' || rightNode.type === 'goal') {\n      neighboors.push(rightNode) \n    }\n  }\n  // DOWN\n  if (row < 10) {\n    const downNode = nodes[row + 1][col]\n    if (downNode.type === 'unvisited' || downNode.type === 'goal') {\n      neighboors.push(downNode) \n    }\n  }\n  // LEFT\n  if (col > 0) {\n    const leftNode = nodes[row][col - 1]\n    if (leftNode.type === 'unvisited' || leftNode.type === 'goal') {\n      neighboors.push(leftNode) \n    }\n  }\n\n  return neighboors\n}\n\nexport const getManDistance = (u, v) => {\n  return Math.sqrt( (u.rowIndex - v.rowIndex)**2 + (u.colIndex - v.colIndex)**2)\n}\n\nexport const getHelperNodes = (nodes) => {\n  const helperNodes = []\n  nodes.map((row) => {\n    const helperRow = []\n    row.map((node) => {\n        helperRow.push(\n          {\n            type: node.type,\n            rowIndex: node.rowIndex,\n            colIndex: node.colIndex\n          }\n        )\n    })\n    helperNodes.push(helperRow)\n  })\n  return helperNodes\n}\n\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const Dijkstra = (nodes, source, speed, setRunState, setNodesVisited, setNodesInPath) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      Q.add(V)\n      const alt = U.dist + getManDistance(U, V)\n      if (alt < V.dist) {\n        V.dist = alt\n        V.prev = [U.rowIndex, U.colIndex] // We keep track of index instead of node for memory purposes -> Becomes a long chain\n      }\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const AStar = (nodes, source, goal, speed, setRunState, setNodesVisited, setNodesInPath) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n      node.currentDistance = 0\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n\n  var helperGoal = helperNodes[goal.rowIndex][goal.colIndex]\n\n  var goalFound = false // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalFound = true\n        helperGoal.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'peeked'\n      V.currentDistance = U.currentDistance + 1\n      V.dist = V.currentDistance + getManDistance(V, helperGoal) // current distance from start to node + distance to goal\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalFound) {\n    var shortestPathNode = helperNodes[helperGoal.prev[0]][helperGoal.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getHelperNodes } from './utils.js'\n\nexport const DepthFirst = (nodes, source, speed, setRunState, setNodesVisited, setNodesInPath) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n  \n  while (Q.array.length !== 0) {\n    const U = Q.array.pop() // gets node with shortest distance and removes it from Q\n    if (U.type === 'goal') break\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      Q.add(V)\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getHelperNodes } from './utils.js'\n\nexport const BreadthFirst = (nodes, source, speed, setRunState, setNodesVisited, setNodesInPath) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const BestFirst = (nodes, source, goal, speed, setRunState, setNodesVisited, setNodesInPath) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n\n  var helperGoal = helperNodes[goal.rowIndex][goal.colIndex]\n\n  var goalFound = false // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalFound = true\n        helperGoal.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'peeked'\n      V.dist = getManDistance(V, helperGoal) // DISTANCE TO GOAL\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalFound) {\n    var shortestPathNode = helperNodes[helperGoal.prev[0]][helperGoal.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setRunState, setNodesInPath)\n}\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport Node from './node.js'\nimport ButtonGroup from '../buttonGroup/buttonGroup.js'\nimport getInitialNodes from './initialNodes.js'\nimport { Dijkstra } from '../../algorithms/dijkstra.js'\nimport { AStar } from '../../algorithms/aStar.js'\nimport { DepthFirst } from '../../algorithms/depthFirst'\nimport { BreadthFirst } from '../../algorithms/breadthFirst'\nimport { BestFirst } from '../../algorithms/bestFirst'\n\nconst speedLabelToSpeedMap = {\n  slow: 200,\n  medium: 100,\n  fast: 60,\n  instant: 0\n}\nvar key = 0\nconst NodeArray = () => {\n  const [nodes, setNodes] = useState([])\n  const [isMouseDownInArray, setIsMouseDownInArray] = useState(false)\n  const [runState, setRunState] = useState('empty') // empty, cusomized, running, finished\n  const [algorithm, setAlgorithm] = useState('') // IKKE NØDVENDIG? -> Kan holdes i ButtonGroup -> Samme med speed -> Nei\n  const [speed, setSpeed] = useState('medium')\n  const [nodesVisited, setNodesVisited] = useState(0)\n  const [nodesInPath, setNodesInPath] = useState(0)\n\n  const hooks = {\n    isMouseDownInArray,\n    setIsMouseDownInArray,\n    runState,\n    setRunState\n  }\n\n  // basicly componentDidMount()\n  useEffect(() => {\n    const initialNodes = getInitialNodes()\n    setNodes(initialNodes)\n  }, [])\n\n  const setTypeInNode = (type, coordinates) => {\n    const row = coordinates[0]\n    const col = coordinates[1]\n    nodes[row][col].type = type\n  }\n\n  // DOES CALLBACK MAKE ANY DIFFERENCE HERE?\n  // I GUESS THE FUNCTION ISNT MADE EVERY RENDER (WHICH HAPPENS A LOT)\n  // HOWEVER, A CLG INSIDE OF IT NEVER ACTUALLY HAPPENS UNLESS THE FUNCTION IS CALLED (TESTED)\n  const resetNodes = useCallback(() => {\n    const initialNodes = getInitialNodes() // clears the grid\n    setNodes(initialNodes)\n    setRunState('empty')\n  }, [])\n\n  const labelToAlgorithm = useMemo(() => {\n    return {\n      dijkstra: Dijkstra,\n      aStar: AStar,\n      depthFirst: DepthFirst,\n      breadthFirst: BreadthFirst,\n      bestFirst: BestFirst\n    }\n  }, [])\n\n  const runAlgorithm = (currentAlgorithm) => {\n    const Algorithm = labelToAlgorithm[currentAlgorithm]\n    const algorithmUsesGoalNode = currentAlgorithm === 'aStar' || currentAlgorithm === 'bestFirst'\n    const currentSpeed = speedLabelToSpeedMap[speed]\n    setRunState('running')\n    // console.log(currentAlgorithm, 'is running')\n\n    if (algorithmUsesGoalNode) {\n      Algorithm(nodes, nodes[5][4], nodes[5][16], currentSpeed, setRunState, setNodesVisited, setNodesInPath)\n    } else {\n      Algorithm(nodes, nodes[5][4], currentSpeed, setRunState, setNodesVisited, setNodesInPath)\n    }\n    \n  }\n\n  const clearPath = () => {\n    var isCustomized = false\n    nodes.map((row) => {\n      row.map((node) => {\n        if (node.type === 'shortestPath' || node.type === 'visited') {\n          node.type = 'unvisited'\n        } else if (node.type === 'wall') {\n          isCustomized = true\n        }\n      })\n    })\n    setRunState(isCustomized ? 'customized' : 'empty')\n  }\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <ButtonGroup runState={runState} setAlgorithm={setAlgorithm} runAlgorithm={runAlgorithm} setSpeed={setSpeed} resetNodes={resetNodes} clearPath={clearPath} />\n      {nodes.map((row, rowIndex) => {\n        return <div key={rowIndex} style={{display: 'flex', flexDirection: 'row'}}>\n          {row.map((node, colIndex) =>\n            <Node\n              key={key++}\n              type={node.type}\n              hooks={hooks}\n              setTypeInNode={setTypeInNode}\n              coordinates={[rowIndex, colIndex]}\n            />\n          )}\n        </div>\n      })}\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n        <h1> Nodes expanded: {nodesVisited || '--'} </h1>\n        <h1> Nodes in path: {nodesInPath || '--'} </h1>\n      </div>\n      {algorithm === 'depthFirst' && <p> Note: depth first does not find shortest path, it just finds the goal (and might be slightly bugged :D).</p>}\n      {algorithm === 'bestFirst' && <p> Note: Best First search is fast, but it's actually not guaranteed to find the <b>shortest</b> path.</p>}\n    </div>\n  )\n}\n\nexport default NodeArray","import React from 'react';\nimport Header from './views/header.js'\nimport NodeArray from './views/pathFinding/nodeArray'\n\nfunction App() {\n\n  const algorithmStyle = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <>\n\n      <div style={algorithmStyle}>\n        <Header />\n        <NodeArray />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}