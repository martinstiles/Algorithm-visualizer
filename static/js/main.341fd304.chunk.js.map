{"version":3,"sources":["views/pathFinding/node.js","views/buttonGroup/modal.js","views/buttonGroup/moreMenu.js","views/buttonGroup/buttonGroup.js","views/pathFinding/initialNodes.js","algorithms/queue.js","algorithms/visualize.js","algorithms/utils.js","views/pathFinding/nodeArray.js","algorithms/dijkstra.js","algorithms/aStar.js","algorithms/depthFirst.js","algorithms/breadthFirst.js","algorithms/bestFirst.js","views/pathFinding/pathFinding.js","views/header.js","App.js","index.js"],"names":["typeToColorMap","source","goal","wall","visited","shortestPath","unvisited","Node","props","useState","type","setType","internalMouseDown","setInternalMouseDown","runState","hooks","updateType","newType","setTypeInNode","coordinates","handleMakeWall","style","height","width","border","background","transform","key","onMouseDown","setRunState","setIsMouseDownInArray","onMouseUp","onMouseEnter","isMouseDownInArray","onMouseLeave","modal","display","alignItems","justifyContent","paper","backgroundColor","textAlign","padding","TransitionsModal","localStorage","getItem","open","setOpen","handleClose","setItem","Button","fontSize","color","margin","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","marginLeft","marginRight","flexDirection","MoreMenu","anchorEl","setAnchorEl","handleMoreClose","marginTop","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","Link","target","href","ButtonGroup","selectStyle","minWidth","isEmpty","isCustomized","isRunning","isFinished","algorithm","setAlgorithm","speed","setSpeed","marginBottom","FormControl","variant","InputLabel","fontStyle","Select","value","onChange","console","log","label","autoWidth","ariant","disabled","runAlgorithm","resetNodes","clearPath","getInitialNodes","nodes","row","currentRow","col","rowIndex","colIndex","push","Queue","getFirstElem","array","shift","add","elem","added","i","length","dist","splice","clear","this","visualize","changedNodesInOrder","setNodesVisited","setUpdateHook","nodesVisited","update","map","helperNode","node","setTimeout","getNeighboors","neighboors","upNode","rightNode","downNode","leftNode","getManDistance","u","v","Math","sqrt","getHelperNodes","helperNodes","helperRow","speedLabelToSpeedMap","slow","medium","fast","instant","NodeArray","setNodes","useEffect","initialNodes","currentAlgorithm","currentSpeed","Q","prev","undefined","helperSource","goalNode","U","V","alt","shortestPathNode","foundString","Dijkstra","helperGoal","goalFound","AStar","pop","DepthFirst","BreadthFirst","BestFirst","PathFinding","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341fd304.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst typeToColorMap = {\n  source: '#63C132',\n  goal: '#cf2e2e',\n  wall: `rgb(${[220,220,220]})`,\n  visited: '#2d749a',\n  shortestPath: '#ffff60',\n  unvisited: ''\n}\n\nconst Node = (props) => {\n  const [type, setType] = useState(props.type)\n  const [internalMouseDown, setInternalMouseDown] = useState(false)\n  const runState = props.hooks.runState\n\n  const updateType = (newType) => {\n    setType(newType)\n    props.setTypeInNode(newType, props.coordinates)\n  }\n  \n  const handleMakeWall = () => {\n    if (props.type === 'unvisited') updateType('wall')\n    else if (props.type === 'wall') updateType('unvisited')\n    setInternalMouseDown(true)\n  }\n\n  const style = {\n    height: '2.5em',\n    width: '2.5em',\n    border: `1px solid rgb(${[220,220,220]})`,\n    background: typeToColorMap[type],\n    ...(internalMouseDown && type === 'wall' && {transform: `scale(${1.3})`})\n  }\n\n  const onMouseDown = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    props.hooks.setRunState('customized')\n\n    props.hooks.setIsMouseDownInArray(true)\n    handleMakeWall()\n  }\n  const onMouseEnter = () => {\n    if ( runState !== 'empty' && runState !== 'customized' ) return\n    if (props.hooks.isMouseDownInArray) {\n      props.hooks.setIsMouseDownInArray(true) // To prevent mouseUp outside of grid bug\n      handleMakeWall()\n    }\n  }\n  const onMouseUp = () => {\n    props.hooks.setIsMouseDownInArray(false)\n    setInternalMouseDown(false)\n  }\n  const onMouseLeave = () => {\n    setInternalMouseDown(false) // to stop scale(1.3)\n    props.hooks.setIsMouseDownInArray(false) // To prevent mouseUp outside of grid bug\n  }\n  return (\n    <div key={props.key} style={style} onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}/>\n  )\n}\n\nexport default Node","import React, {useState} from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { Button } from '@material-ui/core'\n\nconst modal = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\nconst paper = {\n  backgroundColor: `rgb(${[40,40,40]})`,\n  border: `2px solid rgb(${[220,220,220]})`,\n  textAlign: 'left',\n  padding: '1em',\n}\n\nconst TransitionsModal = () => {\n\n  const visited = localStorage.getItem('visited')\n  const [open, setOpen] = useState(visited ? false : true)\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    localStorage.setItem('visited', true)\n  }\n\n  return (\n    <div>\n      <Button style={{fontSize: '0.9em', color: 'white', margin: 0 }} onClick={handleOpen}>\n        <HelpIcon style={{fontSize: '0.9em'}} />\n      </Button>\n      <Modal\n        style={modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div style={paper}>\n            <div style={{textAlign: 'center'}}>\n              <h2 > Welcome to my Pathfinding Visualizer</h2>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'space-between', marginLeft: '1em', marginRight: '1em'}}>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#63C132'}}> Green cell&nbsp; </p>\n                <p> - start node </p>\n              </div>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#2d749a'}}> Blue cell&nbsp; </p>\n                <p> - expanded node </p>\n              </div>\n            </div>\n\n            <div style={{display: 'flex', justifyContent: 'space-between', marginLeft: '1em', marginRight: '1em'}}>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#cf2e2e'}}> Red cell&nbsp; </p>\n                <p> - goal node </p>\n              </div>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <p style={{color: '#ffff60'}}> Yellow cell&nbsp; </p>\n                <p> - shortest path </p>\n              </div>\n            </div>\n            <p> 1. Click inside the grid and hold down your mouse button to draw walls </p>\n            <p> 2. Clicking again will allow you to remove walls </p>\n            <p> 3. Select algorithm of choice </p>\n            <p> 4. Select a different speed if you feel like it </p>\n            <p> 5. Hit play :)  </p>\n            <div style={{textAlign: 'center'}}>\n              <Button\n                style={{color: `rgb(${[20,20,20]})`, backgroundColor: `rgb(${[220,220,220]})`, fontSize: '0.9em'}}\n                onClick={handleClose}>\n                Let me play already\n              </Button>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal","import React, { useState } from 'react'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\nimport { Button, MenuItem, Menu, Link } from '@material-ui/core'\n\nconst MoreMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <>\n      <Button style={{fontSize: '1em', color: 'white', margin: 0, marginTop: '6px'}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/sorting-visualizer/' style={{color: 'black'}}>\n            Sorting Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/pathfinding-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://www.youtube.com/watch?v=dQw4w9WgXcQ' style={{color: 'black'}}>\n            Free stuff\n          </Link></MenuItem>\n        </Menu>\n    </>\n  )\n}\n\nexport default MoreMenu\n","import React, { useState } from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport TransitionModal from './modal.js'\nimport MoreMenu from './moreMenu.js'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C',\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  const isEmpty = props.runState === 'empty'\n  const isCustomized = props.runState === 'customized'\n  const isRunning = props.runState === 'running'\n  const isFinished = props.runState === 'finished'\n\n  // ALGORITHM SELECT\n  const [algorithm, setAlgorithm] = useState('')\n  const handleAlgorithmChange = (event) => {\n    props.setAlgorithm(event.target.value)\n    setAlgorithm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // SPEED SELECT\n  const [speed, setSpeed] = useState('medium')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value)\n    props.setSpeed(event.target.value)\n  }\n\n  // PLAY BUTTON\n  const handlePlayClick = () => {\n    props.runAlgorithm(algorithm)\n  }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'aStar'}>A*</MenuItem>\n          <MenuItem value={'bestFirst'}>Best First</MenuItem>\n          <MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n          <MenuItem value={'dijkstra'}>Dijkstra</MenuItem>\n          <MenuItem value={'depthFirst'}>Depth First</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n          <MenuItem value={'instant'}>Instant</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm === '' || isRunning || isFinished ? 'gray' : '#63C132'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isRunning}\n        onClick={handlePlayClick}\n      >\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isEmpty || isRunning ? 'gray' : '#cf2e2e'}}\n        variant=\"contained\"\n        disabled={isEmpty || isRunning}\n        onClick={isCustomized ? props.resetNodes : props.clearPath}\n      >\n        { isEmpty || isCustomized ? <HighlightOffIcon /> : <ReplayIcon /> }\n      </Button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '2.65em'}}>\n        <TransitionModal />\n        <MoreMenu />\n      </div>\n    </div>\n  )\n}\n\n\n//<MenuItem value={'aStar'}>A*</MenuItem>\n//<MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n//<MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n\nexport default ButtonGroup","const getInitialNodes = () => {\n  const numRows = 11 // 21\n  const numCols = 21 // 50\n  const nodes = []\n  // Initialize the nodes\n  for (let row = 0; row < numRows; row++) {\n    const currentRow = []\n    for (let col = 0; col < numCols; col++) {\n      const rowIndex = row\n      const colIndex = col\n      var type = 'unvisited'\n      // 10 og 4\n      // 10 og 44\n      if (row === 5 && col === 4) {type = 'source'}\n      if (row === 5 && col === 16) {type = 'goal'}\n      currentRow.push(\n        { type, rowIndex, colIndex }\n      )\n    }\n    nodes.push(currentRow)\n  }\n  return nodes\n}\n\nexport default getInitialNodes","// sorted queue with shortest distance, and then earliest add, first in list\nexport class Queue {\n  constructor() {\n    this.array = []\n  }\n\n  getFirstElem = () => {\n    return this.array.shift()\n  }\n  add = (elem) => {\n    var added = false\n    for (let i = 0; i < this.array.length; i++) {\n      if (elem.dist < this.array[i].dist) {\n         this.array.splice(i, 0, elem)\n        added = true\n        break\n      }\n    }\n    if (!added) this.array.push(elem)\n  }\n  clear = () => {\n    this.array = []\n  }\n}\n","// VISUALIZE:\nexport const visualize = (changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState) => {\n  var nodesVisited = 1\n  var i = 1\n  var update = true\n\n  // instant\n  if (speed === 0) {\n    changedNodesInOrder.map((helperNode) => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      if (node.type !== 'shortestPath') setNodesVisited(nodesVisited++)\n      else {\n        setUpdateHook(update) // this has to be done to make the parent component rerender, thus displaying the updates\n        update = !update\n      }\n    })\n    setRunState('finished')\n    return\n  }\n\n  changedNodesInOrder.map((helperNode) => {\n    setTimeout(() => {\n      const node = nodes[helperNode.rowIndex][helperNode.colIndex]\n      node.type = helperNode.type\n      if (node.type !== 'shortestPath') setNodesVisited(nodesVisited++)\n      else {\n        setUpdateHook(update) // this has to be done to make the parent component rerender, thus displaying the updates\n        update = !update\n      }\n    }, speed*i)\n    i++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n  }, speed*i)\n}\n","  export const getNeighboors = (nodes, node) => {\n  const neighboors = []\n  const row = node.rowIndex\n  const col = node.colIndex\n\n  // UP\n  if (row > 0) {\n    const upNode = nodes[row - 1][col]\n    if (upNode.type === 'unvisited' || upNode.type === 'goal') {\n      neighboors.push(upNode) \n    }\n  }\n  // RIGHT 49\n  if (col < 20) {\n    const rightNode = nodes[row][col + 1]\n    if (rightNode.type === 'unvisited' || rightNode.type === 'goal') {\n      neighboors.push(rightNode) \n    }\n  }\n  // DOWN\n  if (row < 10) {\n    const downNode = nodes[row + 1][col]\n    if (downNode.type === 'unvisited' || downNode.type === 'goal') {\n      neighboors.push(downNode) \n    }\n  }\n  // LEFT\n  if (col > 0) {\n    const leftNode = nodes[row][col - 1]\n    if (leftNode.type === 'unvisited' || leftNode.type === 'goal') {\n      neighboors.push(leftNode) \n    }\n  }\n\n  return neighboors\n}\n\nexport const getManDistance = (u, v) => {\n  return Math.sqrt( (u.rowIndex - v.rowIndex)**2 + (u.colIndex - v.colIndex)**2)\n}\n\nexport const getHelperNodes = (nodes) => {\n  const helperNodes = []\n  nodes.map((row) => {\n    const helperRow = []\n    row.map((node) => {\n        helperRow.push(\n          {\n            type: node.type,\n            rowIndex: node.rowIndex,\n            colIndex: node.colIndex\n          }\n        )\n    })\n    helperNodes.push(helperRow)\n  })\n  return helperNodes\n}\n\n","import React, { useState, useEffect } from 'react'\nimport Node from './node.js'\nimport ButtonGroup from '../buttonGroup/buttonGroup.js'\nimport getInitialNodes from './initialNodes.js'\nimport { Dijkstra } from '../../algorithms/dijkstra.js'\nimport { AStar } from '../../algorithms/aStar.js'\nimport { DepthFirst } from '../../algorithms/depthFirst'\nimport { BreadthFirst } from '../../algorithms/breadthFirst'\nimport { BestFirst } from '../../algorithms/bestFirst'\n\nconst speedLabelToSpeedMap = {\n  slow: 200,\n  medium: 100,\n  fast: 60,\n  instant: 0\n}\n\nvar key = 0\nconst NodeArray = () => {\n  const [nodes, setNodes] = useState([])\n  const [isMouseDownInArray, setIsMouseDownInArray] = useState(false)\n  const [runState, setRunState] = useState('empty') // empty, cusomized, running, finished\n  const [algorithm, setAlgorithm] = useState('') // IKKE NØDVENDIG? -> Kan holdes i ButtonGroup -> Samme med speed -> Nei\n  const [speed, setSpeed] = useState('medium')\n  const [updateHook, setUpdateHook] = useState(false)\n  const [nodesVisited, setNodesVisited] = useState(0)\n\n  const hooks = {\n    isMouseDownInArray,\n    setIsMouseDownInArray,\n    runState,\n    setRunState\n  }\n\n  // basicly componentDidMount()\n  useEffect(() => {\n    const initialNodes = getInitialNodes()\n    setNodes(initialNodes)\n  }, [])\n\n  const setTypeInNode = (type, coordinates) => {\n    const row = coordinates[0]\n    const col = coordinates[1]\n    nodes[row][col].type = type\n  }\n\n  const resetNodes = () => {\n    const initialNodes = getInitialNodes() // clears the grid\n    setNodes(initialNodes)\n    setRunState('empty')\n  }\n\n  const runAlgorithm = (currentAlgorithm) => {\n    //console.log('IN NODEARRAY: ' + algorithm)\n    setRunState('running')\n    const currentSpeed = speedLabelToSpeedMap[speed]\n    if (currentAlgorithm === 'dijkstra') {\n      Dijkstra(nodes, nodes[5][4], currentSpeed, setUpdateHook, setRunState, setNodesVisited)\n    } else if (currentAlgorithm === 'aStar') {\n      AStar(nodes, nodes[5][4], nodes[5][16], currentSpeed, setUpdateHook, setRunState, setNodesVisited)\n    } else if(currentAlgorithm === 'depthFirst') {\n      DepthFirst(nodes, nodes[5][4], currentSpeed, setUpdateHook, setRunState, setNodesVisited)\n    } else if(currentAlgorithm === 'breadthFirst') {\n      BreadthFirst(nodes, nodes[5][4], currentSpeed, setUpdateHook, setRunState, setNodesVisited)\n    } else if (currentAlgorithm === 'bestFirst') {\n      BestFirst(nodes, nodes[5][4], nodes[5][16], currentSpeed, setUpdateHook, setRunState, setNodesVisited)\n    }\n  }\n\n  const clearPath = () => {\n    var isCustomized = false\n    nodes.map((row) => {\n      row.map((node) => {\n        if (node.type === 'shortestPath' || node.type === 'visited') {\n          node.type = 'unvisited'\n        } else if (node.type === 'wall') {\n          isCustomized = true\n        }\n      })\n    })\n    setRunState(isCustomized ? 'customized' : 'empty')\n    console.log('path cleared')\n  }\n  // setAlgorithmInParent={setAlgorithm}\n  //console.log('rendered')\n  return (\n    <div style={{textAlign: 'center'}}>\n      <ButtonGroup runState={runState} setAlgorithm={setAlgorithm} runAlgorithm={runAlgorithm} setSpeed={setSpeed} resetNodes={resetNodes} clearPath={clearPath} />\n      {nodes.map((row, rowIndex) => {\n        return <div key={rowIndex} style={{display: 'flex', flexDirection: 'row'}}>\n          {row.map((node, colIndex) =>\n            <Node\n              key={key++}\n              type={node.type}\n              hooks={hooks}\n              setTypeInNode={setTypeInNode}\n              coordinates={[rowIndex, colIndex]}\n            />\n          )}\n        </div>\n      })}\n      <h1> Nodes visited: {nodesVisited || '--'} </h1>\n      {algorithm === 'depthFirst' && <p> Note: depth first does not find shortest path, it just finds the goal (and might be slightly bugged :D).</p>}\n    </div>\n  )\n}\n\nexport default NodeArray","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const Dijkstra = (nodes, source, speed, setUpdateHook, setRunState, setNodesVisited) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      console.log(Q.array)\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      Q.add(V)\n      const alt = U.dist + getManDistance(U, V)\n      if (alt < V.dist) {\n        V.dist = alt\n        V.prev = [U.rowIndex, U.colIndex] // We keep track of index instead of node for memory purposes -> Becomes a long chain\n      }\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState)\n\n  const foundString = goalNode ? 'found' : 'not found'\n  console.log('Dijkstra finished: Goal ' + foundString)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const AStar = (nodes, source, goal, speed, setUpdateHook, setRunState, setNodesVisited) => {\n  console.log('ASTAR STARTED')\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n\n  var helperGoal = helperNodes[goal.rowIndex][goal.colIndex]\n\n  var goalFound = false // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalFound = true\n        helperGoal.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'peeked'\n      V.dist = getManDistance(helperSource, V) + getManDistance(V, helperGoal) // HEURISTIC + DISTANCE TO GOAL\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalFound) {\n    var shortestPathNode = helperNodes[helperGoal.prev[0]][helperGoal.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  console.log('SPEED: ' + speed)\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState)\n\n  const foundString = goalFound ? 'found' : 'not found'\n  console.log('A* finished: Goal ' + foundString)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getHelperNodes } from './utils.js'\n\nexport const DepthFirst = (nodes, source, speed, setUpdateHook, setRunState, setNodesVisited) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n  \n  while (Q.array.length !== 0) {\n    const U = Q.array.pop() // gets node with shortest distance and removes it from Q\n    if (U.type === 'goal') break\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      Q.add(V)\n    }\n  }\n\n  console.log('SPEED: ' + speed)\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getHelperNodes } from './utils.js'\n\nexport const BreadthFirst = (nodes, source, speed, setUpdateHook, setRunState, setNodesVisited) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  Q.add(helperSource)\n\n  var goalNode = undefined // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      console.log(Q.array)\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalNode = V\n        goalNode.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'visited'\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalNode) {\n    var shortestPathNode = helperNodes[goalNode.prev[0]][goalNode.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState)\n\n  const foundString = goalNode ? 'found' : 'not found'\n  console.log('Dijkstra finished: Goal ' + foundString)\n}\n","import { Queue } from './queue.js'\nimport { visualize } from './visualize'\nimport { getNeighboors, getManDistance, getHelperNodes } from './utils.js'\n\nexport const BestFirst = (nodes, source, goal, speed, setUpdateHook, setRunState, setNodesVisited) => {\n  const changedNodesInOrder = []\n  const helperNodes = getHelperNodes(nodes)\n\n  const Q = new Queue()\n\n  helperNodes.map((row) => \n    row.map((node) => {\n      node.dist = 10000\n      node.prev = undefined\n    })\n  )\n  \n  const helperSource = helperNodes[source.rowIndex][source.colIndex] // gets source according to original source coordinates\n  helperSource.dist = 0\n  helperSource.type = 'source'\n  Q.add(helperSource)\n\n  var helperGoal = helperNodes[goal.rowIndex][goal.colIndex]\n\n  var goalFound = false // tracking if goal is found\n\n  while (Q.array.length !== 0) {\n    const U = Q.getFirstElem() // gets node with shortest distance and removes it from Q\n    if (U.type !== 'source') {\n      U.type = 'visited'\n      changedNodesInOrder.push(\n        {\n          rowIndex: U.rowIndex,\n          colIndex: U.colIndex,\n          type: 'visited'\n        }\n      )\n    }\n\n    const neighboors = getNeighboors(helperNodes, U)\n    for (let i = 0; i < neighboors.length; i++) {\n      const V = neighboors[i]\n      if (V.type === 'goal') {\n        goalFound = true\n        helperGoal.prev = [U.rowIndex, U.colIndex]\n        Q.clear()\n        break\n      }\n      V.type = 'peeked'\n      V.dist = getManDistance(V, helperGoal) // DISTANCE TO GOAL\n      V.prev = [U.rowIndex, U.colIndex]\n      Q.add(V)\n    }\n  }\n\n  if (goalFound) {\n    var shortestPathNode = helperNodes[helperGoal.prev[0]][helperGoal.prev[1]]\n    while (shortestPathNode.prev) {\n      shortestPathNode.type = 'shortestPath'\n      changedNodesInOrder.push(\n        {\n          rowIndex: shortestPathNode.rowIndex,\n          colIndex: shortestPathNode.colIndex,\n          type: 'shortestPath'\n        }\n      )\n      shortestPathNode = helperNodes[shortestPathNode.prev[0]][shortestPathNode.prev[1]]\n    }\n  }\n\n  console.log('SPEED: ' + speed)\n  visualize(changedNodesInOrder, nodes, speed, setNodesVisited, setUpdateHook, setRunState)\n\n  const foundString = goalFound ? 'found' : 'not found'\n  console.log('A* finished: Goal ' + foundString)\n}\n","import React from 'react'\n// import ButtonGroup from '../buttonGroup.js'\nimport NodeArray from './nodeArray.js'\n\nexport const PathFinding = () => {\n  return (\n    <NodeArray />\n  )\n}\n\nexport default PathFinding","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div style={{marginBottom: '2em'}}>\n      <h1 style={{fontSize: '3.5em', color: `rgb(${[250,250,250]})`}}> Pathfinding Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport PathFinding from './views/pathFinding/pathFinding.js'\nimport Header from './views/header.js'\n\nfunction App() {\n\n  const algorithmStyle = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <>\n\n      <div style={algorithmStyle}>\n        <Header />\n        <PathFinding />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}